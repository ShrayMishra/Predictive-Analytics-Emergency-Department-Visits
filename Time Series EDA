{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Predicting Emergency Department Visits using Time-Series Modeling\n",
    "\n",
    "Author: Shray Mishra\n",
    "\n",
    "Steps Taken:\n",
    "\n",
    "1. Data Acquisition\n",
    "2. Data Exploration\n",
    "3. Initial Modeling\n",
    "\n",
    "Data Sources:\n",
    "\n",
    "1. NCSA Convienient Care (From Indicator Data)\n",
    "2. NCSA Emergency Care   (From Indicator Data)\n",
    "3. PAN NCSA Data         (From Indicator Data)\n",
    "4. Weather Data (Source: National Oceanic and Atmospheric Administration)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing libraries for analysis\n",
    "\n",
    "import pandas as pd\n",
    "import csv\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import datetime\n",
    "import boto3\n",
    "from io import StringIO\n",
    "from statsmodels.tsa.stattools import adfuller\n",
    "from statsmodels.tsa.seasonal import seasonal_decompose\n",
    "from statsmodels.tsa.arima_model import ARIMA\n",
    "from pandas.plotting import register_matplotlib_converters\n",
    "register_matplotlib_converters()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Dictionary: Weather Data for Champaign\n",
    "\n",
    "EVAP - Evaporation of water from evaporation pan <br>\n",
    "DAPR - Number of days included in the multiday precipitation total (MDPR)<br>\n",
    "SX52 - Maximum soil temperature with sod cover at 10 cm depth<br>\n",
    "SNOW - Snowfall<br>\n",
    "WT03 - Thunder<br>\n",
    "WESF - Water equivalent of snowfall<br>\n",
    "WT04 - Ice pellets, sleet, snow pellets, or small hail\"<br>\n",
    "PRCP - Precipitation<br>\n",
    "WT05 - Hail (may include small hail)<br>\n",
    "TOBS - Temperature at the time of observation<br>\n",
    "WT06 - Glaze or rime<br>\n",
    "MXPN - Daily maximum temperature of water in an evaporation pan<br>\n",
    "MDSF - Multiday snowfall total<br>\n",
    "SNWD - Snow depth<br>\n",
    "DASF - Number of days included in the multiday snow fall total (MDSF)<br>\n",
    "WT11 - High or damaging winds<br>\n",
    "WT01 - Fog, ice fog, or freezing fog (may include heavy fog)<br>\n",
    "TMAX - Maximum temperature<br>\n",
    "WESD - Water equivalent of snow on the ground<br>\n",
    "TMIN - Minimum temperature<br>\n",
    "MNPN - Daily minimum temperature of water in an evaporation pan<br>\n",
    "MDPR - Multiday precipitation total (use with DAPR and DWPR, if available)<br>\n",
    "WDMV - Total wind movement<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Acquisition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create S3 client with key secret. Removed as of now.\n",
    "client = boto3.client('s3', aws_access_key_id = 'AKIAJ47IKGSXGHLVZY5Q'\n",
    "                  , aws_secret_access_key = '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')\n",
    "bucket_name = 'indicator-dataset'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create function that reads csv file and returns a dataframe\n",
    "def read_file_from_s3(object_key):\n",
    "    # object_key = 'weatherdata.csv'\n",
    "    csv_obj = client.get_object(Bucket=bucket_name, Key=object_key)\n",
    "    body = csv_obj['Body']\n",
    "    csv_string = body.read().decode('utf-8')\n",
    "    # print(type(csv_string))\n",
    "    df = pd.read_csv(StringIO(csv_string))\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reading data to pandas dataframe\n",
    "\n",
    "weather_df = read_file_from_s3('weatherdata.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "concare_df = read_file_from_s3('ConvenientCare_NCSA_11112019.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "emergency_df = read_file_from_s3('EmergencyDepartment_NCSA_11112019.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Shray\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3185: DtypeWarning: Columns (24,25,26,27) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  if (yield from self.run_code(code, result)):\n"
     ]
    }
   ],
   "source": [
    "pandata_df = read_file_from_s3('NT_PAN_NCSA_11112019.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analyzing and Exploring Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>NAME</th>\n",
       "      <th>DATE</th>\n",
       "      <th>DAPR</th>\n",
       "      <th>DASF</th>\n",
       "      <th>EVAP</th>\n",
       "      <th>MDPR</th>\n",
       "      <th>MDSF</th>\n",
       "      <th>MNPN</th>\n",
       "      <th>MXPN</th>\n",
       "      <th>...</th>\n",
       "      <th>TOBS</th>\n",
       "      <th>WDMV</th>\n",
       "      <th>WESD</th>\n",
       "      <th>WESF</th>\n",
       "      <th>WT01</th>\n",
       "      <th>WT03</th>\n",
       "      <th>WT04</th>\n",
       "      <th>WT05</th>\n",
       "      <th>WT06</th>\n",
       "      <th>WT11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-05-24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-05-26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-05-29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-05-31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-03</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>US1ILCP0086</td>\n",
       "      <td>CHAMPAIGN 1.2 SSE, IL US</td>\n",
       "      <td>2012-06-08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       STATION                      NAME        DATE  DAPR  DASF  EVAP  MDPR  \\\n",
       "0  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-05-24   NaN   NaN   NaN   NaN   \n",
       "1  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-05-26   NaN   NaN   NaN   NaN   \n",
       "2  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-05-29   NaN   NaN   NaN   NaN   \n",
       "3  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-05-31   NaN   NaN   NaN   NaN   \n",
       "4  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-01   NaN   NaN   NaN   NaN   \n",
       "5  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-03   NaN   NaN   NaN   NaN   \n",
       "6  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-04   NaN   NaN   NaN   NaN   \n",
       "7  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-05   NaN   NaN   NaN   NaN   \n",
       "8  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-06   NaN   NaN   NaN   NaN   \n",
       "9  US1ILCP0086  CHAMPAIGN 1.2 SSE, IL US  2012-06-08   NaN   NaN   NaN   NaN   \n",
       "\n",
       "   MDSF  MNPN  MXPN  ...   TOBS  WDMV  WESD  WESF  WT01  WT03  WT04  WT05  \\\n",
       "0   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "1   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "2   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "3   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "4   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "5   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "6   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "7   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "8   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "9   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "   WT06  WT11  \n",
       "0   NaN   NaN  \n",
       "1   NaN   NaN  \n",
       "2   NaN   NaN  \n",
       "3   NaN   NaN  \n",
       "4   NaN   NaN  \n",
       "5   NaN   NaN  \n",
       "6   NaN   NaN  \n",
       "7   NaN   NaN  \n",
       "8   NaN   NaN  \n",
       "9   NaN   NaN  \n",
       "\n",
       "[10 rows x 26 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>NAME</th>\n",
       "      <th>DATE</th>\n",
       "      <th>DAPR</th>\n",
       "      <th>DASF</th>\n",
       "      <th>EVAP</th>\n",
       "      <th>MDPR</th>\n",
       "      <th>MDSF</th>\n",
       "      <th>MNPN</th>\n",
       "      <th>MXPN</th>\n",
       "      <th>...</th>\n",
       "      <th>TOBS</th>\n",
       "      <th>WDMV</th>\n",
       "      <th>WESD</th>\n",
       "      <th>WESF</th>\n",
       "      <th>WT01</th>\n",
       "      <th>WT03</th>\n",
       "      <th>WT04</th>\n",
       "      <th>WT05</th>\n",
       "      <th>WT06</th>\n",
       "      <th>WT11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8301</th>\n",
       "      <td>US1ILCP0110</td>\n",
       "      <td>CHAMPAIGN 1.0 ESE, IL US</td>\n",
       "      <td>2017-10-10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8302</th>\n",
       "      <td>US1ILCP0110</td>\n",
       "      <td>CHAMPAIGN 1.0 ESE, IL US</td>\n",
       "      <td>2017-10-11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8303</th>\n",
       "      <td>US1ILCP0110</td>\n",
       "      <td>CHAMPAIGN 1.0 ESE, IL US</td>\n",
       "      <td>2017-10-12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8304</th>\n",
       "      <td>US1ILCP0110</td>\n",
       "      <td>CHAMPAIGN 1.0 ESE, IL US</td>\n",
       "      <td>2017-10-14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8305</th>\n",
       "      <td>US1ILCP0110</td>\n",
       "      <td>CHAMPAIGN 1.0 ESE, IL US</td>\n",
       "      <td>2018-05-10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          STATION                      NAME        DATE  DAPR  DASF  EVAP  \\\n",
       "8301  US1ILCP0110  CHAMPAIGN 1.0 ESE, IL US  2017-10-10   NaN   NaN   NaN   \n",
       "8302  US1ILCP0110  CHAMPAIGN 1.0 ESE, IL US  2017-10-11   NaN   NaN   NaN   \n",
       "8303  US1ILCP0110  CHAMPAIGN 1.0 ESE, IL US  2017-10-12   NaN   NaN   NaN   \n",
       "8304  US1ILCP0110  CHAMPAIGN 1.0 ESE, IL US  2017-10-14   NaN   NaN   NaN   \n",
       "8305  US1ILCP0110  CHAMPAIGN 1.0 ESE, IL US  2018-05-10   NaN   NaN   NaN   \n",
       "\n",
       "      MDPR  MDSF  MNPN  MXPN  ...   TOBS  WDMV  WESD  WESF  WT01  WT03  WT04  \\\n",
       "8301   NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "8302   NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "8303   NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "8304   NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "8305   NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   \n",
       "\n",
       "      WT05  WT06  WT11  \n",
       "8301   NaN   NaN   NaN  \n",
       "8302   NaN   NaN   NaN  \n",
       "8303   NaN   NaN   NaN  \n",
       "8304   NaN   NaN   NaN  \n",
       "8305   NaN   NaN   NaN  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8306 entries, 0 to 8305\n",
      "Data columns (total 26 columns):\n",
      "STATION    8306 non-null object\n",
      "NAME       8306 non-null object\n",
      "DATE       8306 non-null object\n",
      "DAPR       218 non-null float64\n",
      "DASF       1 non-null float64\n",
      "EVAP       1238 non-null float64\n",
      "MDPR       218 non-null float64\n",
      "MDSF       1 non-null float64\n",
      "MNPN       185 non-null float64\n",
      "MXPN       185 non-null float64\n",
      "PRCP       8089 non-null float64\n",
      "SNOW       5904 non-null float64\n",
      "SNWD       3828 non-null float64\n",
      "SX52       5 non-null float64\n",
      "TMAX       3653 non-null float64\n",
      "TMIN       3653 non-null float64\n",
      "TOBS       3649 non-null float64\n",
      "WDMV       1236 non-null float64\n",
      "WESD       2124 non-null float64\n",
      "WESF       2142 non-null float64\n",
      "WT01       616 non-null float64\n",
      "WT03       302 non-null float64\n",
      "WT04       33 non-null float64\n",
      "WT05       8 non-null float64\n",
      "WT06       27 non-null float64\n",
      "WT11       17 non-null float64\n",
      "dtypes: float64(23), object(3)\n",
      "memory usage: 1.6+ MB\n"
     ]
    }
   ],
   "source": [
    "weather_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>DAPR</th>\n",
       "      <th>DASF</th>\n",
       "      <th>EVAP</th>\n",
       "      <th>MDPR</th>\n",
       "      <th>MDSF</th>\n",
       "      <th>MNPN</th>\n",
       "      <th>MXPN</th>\n",
       "      <th>PRCP</th>\n",
       "      <th>SNOW</th>\n",
       "      <th>SNWD</th>\n",
       "      <th>...</th>\n",
       "      <th>TOBS</th>\n",
       "      <th>WDMV</th>\n",
       "      <th>WESD</th>\n",
       "      <th>WESF</th>\n",
       "      <th>WT01</th>\n",
       "      <th>WT03</th>\n",
       "      <th>WT04</th>\n",
       "      <th>WT05</th>\n",
       "      <th>WT06</th>\n",
       "      <th>WT11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>218.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1238.000000</td>\n",
       "      <td>218.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>8089.000000</td>\n",
       "      <td>5904.000000</td>\n",
       "      <td>3828.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3649.000000</td>\n",
       "      <td>1236.000000</td>\n",
       "      <td>2124.000000</td>\n",
       "      <td>2142.000000</td>\n",
       "      <td>616.0</td>\n",
       "      <td>302.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.793578</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.213441</td>\n",
       "      <td>0.693028</td>\n",
       "      <td>8.11</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>87.313514</td>\n",
       "      <td>0.117108</td>\n",
       "      <td>0.067090</td>\n",
       "      <td>0.330904</td>\n",
       "      <td>...</td>\n",
       "      <td>48.077007</td>\n",
       "      <td>14.415534</td>\n",
       "      <td>0.001412</td>\n",
       "      <td>0.000934</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.187820</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.223885</td>\n",
       "      <td>1.170141</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.028846</td>\n",
       "      <td>20.222649</td>\n",
       "      <td>0.321639</td>\n",
       "      <td>0.495625</td>\n",
       "      <td>1.225902</td>\n",
       "      <td>...</td>\n",
       "      <td>18.773285</td>\n",
       "      <td>19.041527</td>\n",
       "      <td>0.043057</td>\n",
       "      <td>0.020020</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>8.11</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-12.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.120000</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>8.11</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>1.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.180000</td>\n",
       "      <td>0.335000</td>\n",
       "      <td>8.11</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>8.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.240000</td>\n",
       "      <td>0.867500</td>\n",
       "      <td>8.11</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>19.300000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>29.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.210000</td>\n",
       "      <td>8.450000</td>\n",
       "      <td>8.11</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>106.000000</td>\n",
       "      <td>4.830000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>85.000000</td>\n",
       "      <td>152.900000</td>\n",
       "      <td>1.700000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             DAPR  DASF         EVAP        MDPR  MDSF        MNPN  \\\n",
       "count  218.000000   1.0  1238.000000  218.000000  1.00  185.000000   \n",
       "mean     4.793578   2.0     0.213441    0.693028  8.11   63.000000   \n",
       "std      4.187820   NaN     0.223885    1.170141   NaN   16.028846   \n",
       "min      2.000000   2.0     0.000000    0.000000  8.11    0.000000   \n",
       "25%      3.000000   2.0     0.120000    0.020000  8.11   57.000000   \n",
       "50%      3.000000   2.0     0.180000    0.335000  8.11   68.000000   \n",
       "75%      5.000000   2.0     0.240000    0.867500  8.11   73.000000   \n",
       "max     29.000000   2.0     3.210000    8.450000  8.11   80.000000   \n",
       "\n",
       "             MXPN         PRCP         SNOW         SNWD  ...          TOBS  \\\n",
       "count  185.000000  8089.000000  5904.000000  3828.000000  ...   3649.000000   \n",
       "mean    87.313514     0.117108     0.067090     0.330904  ...     48.077007   \n",
       "std     20.222649     0.321639     0.495625     1.225902  ...     18.773285   \n",
       "min      0.000000     0.000000     0.000000     0.000000  ...    -12.000000   \n",
       "25%     84.000000     0.000000     0.000000     0.000000  ...     33.000000   \n",
       "50%     93.000000     0.000000     0.000000     0.000000  ...     50.000000   \n",
       "75%     98.000000     0.050000     0.000000     0.000000  ...     65.000000   \n",
       "max    106.000000     4.830000    12.000000    12.000000  ...     85.000000   \n",
       "\n",
       "              WDMV         WESD         WESF   WT01   WT03  WT04  WT05  WT06  \\\n",
       "count  1236.000000  2124.000000  2142.000000  616.0  302.0  33.0   8.0  27.0   \n",
       "mean     14.415534     0.001412     0.000934    1.0    1.0   1.0   1.0   1.0   \n",
       "std      19.041527     0.043057     0.020020    0.0    0.0   0.0   0.0   0.0   \n",
       "min       0.000000     0.000000     0.000000    1.0    1.0   1.0   1.0   1.0   \n",
       "25%       1.900000     0.000000     0.000000    1.0    1.0   1.0   1.0   1.0   \n",
       "50%       8.100000     0.000000     0.000000    1.0    1.0   1.0   1.0   1.0   \n",
       "75%      19.300000     0.000000     0.000000    1.0    1.0   1.0   1.0   1.0   \n",
       "max     152.900000     1.700000     0.600000    1.0    1.0   1.0   1.0   1.0   \n",
       "\n",
       "       WT11  \n",
       "count  17.0  \n",
       "mean    1.0  \n",
       "std     0.0  \n",
       "min     1.0  \n",
       "25%     1.0  \n",
       "50%     1.0  \n",
       "75%     1.0  \n",
       "max     1.0  \n",
       "\n",
       "[8 rows x 23 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Convenient Care Location</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04/09/2010</td>\n",
       "      <td>CHAMPAIGN ON CURTIS PBB</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>09/17/2010</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>03/11/2011</td>\n",
       "      <td>DANVILLE FAIRCHILD</td>\n",
       "      <td>ERRONEOUS ENCOUNTER-DISREGARD</td>\n",
       "      <td>ERRONEOUS ENCOUNTER--DISREGARD</td>\n",
       "      <td>10000</td>\n",
       "      <td>10001</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03/31/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>06/20/2011</td>\n",
       "      <td>URBANA ON WINDSOR</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Corneal abrasion, right</td>\n",
       "      <td>918.1</td>\n",
       "      <td>S05.01XA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>08/27/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Acute pharyngitis</td>\n",
       "      <td>462</td>\n",
       "      <td>J02.9</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Date of Visit   Convenient Care Location                Chief Complaint  \\\n",
       "0    04/09/2010    CHAMPAIGN ON CURTIS PBB            *No Chief Complaint   \n",
       "1    09/17/2010        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "2    03/11/2011         DANVILLE FAIRCHILD  ERRONEOUS ENCOUNTER-DISREGARD   \n",
       "3    03/31/2011  MATTOON CHARLESTON CLINIC            *No Chief Complaint   \n",
       "4    06/20/2011          URBANA ON WINDSOR            *No Chief Complaint   \n",
       "5    08/27/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "6    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "7    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "8    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "9    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "\n",
       "                        Diagnosis   ICD9     ICD10  ID  \n",
       "0                          *No Dx    NaN       NaN   1  \n",
       "1                          *No Dx    NaN       NaN   2  \n",
       "2  ERRONEOUS ENCOUNTER--DISREGARD  10000     10001   3  \n",
       "3                          *No Dx    NaN       NaN   4  \n",
       "4         Corneal abrasion, right  918.1  S05.01XA   5  \n",
       "5                          *No Dx    NaN       NaN   6  \n",
       "6               Acute pharyngitis    462     J02.9   7  \n",
       "7                          *No Dx    NaN       NaN   8  \n",
       "8                          *No Dx    NaN       NaN   9  \n",
       "9                          *No Dx    NaN       NaN  10  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concare_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2505663 entries, 0 to 2505662\n",
      "Data columns (total 7 columns):\n",
      "Date of Visit               object\n",
      "Convenient Care Location    object\n",
      "Chief Complaint             object\n",
      "Diagnosis                   object\n",
      "ICD9                        object\n",
      "ICD10                       object\n",
      "ID                          object\n",
      "dtypes: object(7)\n",
      "memory usage: 133.8+ MB\n"
     ]
    }
   ],
   "source": [
    "concare_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Convenient Care Location</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2505663</td>\n",
       "      <td>2505663</td>\n",
       "      <td>2505663</td>\n",
       "      <td>2505663</td>\n",
       "      <td>2501739</td>\n",
       "      <td>2501460</td>\n",
       "      <td>2505663</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>3004</td>\n",
       "      <td>17</td>\n",
       "      <td>550</td>\n",
       "      <td>47690</td>\n",
       "      <td>6358</td>\n",
       "      <td>11593</td>\n",
       "      <td>945523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>12/17/2012</td>\n",
       "      <td>CHAMPAIGN ON CURTIS PBB</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>Cough</td>\n",
       "      <td>462</td>\n",
       "      <td>J02.9</td>\n",
       "      <td>2,195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1758</td>\n",
       "      <td>719157</td>\n",
       "      <td>274827</td>\n",
       "      <td>104760</td>\n",
       "      <td>226556</td>\n",
       "      <td>226099</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date of Visit Convenient Care Location Chief Complaint Diagnosis  \\\n",
       "count        2505663                  2505663         2505663   2505663   \n",
       "unique          3004                       17             550     47690   \n",
       "top       12/17/2012  CHAMPAIGN ON CURTIS PBB           COUGH     Cough   \n",
       "freq            1758                   719157          274827    104760   \n",
       "\n",
       "           ICD9    ICD10       ID  \n",
       "count   2501739  2501460  2505663  \n",
       "unique     6358    11593   945523  \n",
       "top         462    J02.9    2,195  \n",
       "freq     226556   226099       75  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concare_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Convenient Care Location</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04/09/2010</td>\n",
       "      <td>CHAMPAIGN ON CURTIS PBB</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>09/17/2010</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>03/11/2011</td>\n",
       "      <td>DANVILLE FAIRCHILD</td>\n",
       "      <td>ERRONEOUS ENCOUNTER-DISREGARD</td>\n",
       "      <td>ERRONEOUS ENCOUNTER--DISREGARD</td>\n",
       "      <td>10000</td>\n",
       "      <td>10001</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03/31/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>06/20/2011</td>\n",
       "      <td>URBANA ON WINDSOR</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Corneal abrasion, right</td>\n",
       "      <td>918.1</td>\n",
       "      <td>S05.01XA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>08/27/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Acute pharyngitis</td>\n",
       "      <td>462</td>\n",
       "      <td>J02.9</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>08/28/2011</td>\n",
       "      <td>CHAMPAIGN ON CURTIS</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>DIZZINESS</td>\n",
       "      <td>Attention deficit disorder without mention of ...</td>\n",
       "      <td>314.00</td>\n",
       "      <td>F98.8</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>SORE THROAT</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>LESION</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>DIZZINESS</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>UPPER RESPIRATORY SX</td>\n",
       "      <td>Acute sinusitis, unspecified</td>\n",
       "      <td>461.9</td>\n",
       "      <td>J01.90</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>Acute sinusitis, unspecified</td>\n",
       "      <td>461.9</td>\n",
       "      <td>J01.90</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>UPPER RESPIRATORY SX</td>\n",
       "      <td>Allergic rhinitis, cause unspecified</td>\n",
       "      <td>477.9</td>\n",
       "      <td>J30.9</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>BACK PAIN</td>\n",
       "      <td>Osteoporosis, unspecified</td>\n",
       "      <td>733.00</td>\n",
       "      <td>M81.0</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>BACK PAIN</td>\n",
       "      <td>Lumbago</td>\n",
       "      <td>724.2</td>\n",
       "      <td>M54.5</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>BACK PAIN</td>\n",
       "      <td>COPD (chronic obstructive pulmonary disease) (...</td>\n",
       "      <td>496</td>\n",
       "      <td>J44.9</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>Unspecified otitis media</td>\n",
       "      <td>382.9</td>\n",
       "      <td>H66.90</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>EAR PROBLEM</td>\n",
       "      <td>Unspecified otitis media</td>\n",
       "      <td>382.9</td>\n",
       "      <td>H66.90</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>EAR PROBLEM</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>VOMITING</td>\n",
       "      <td>Acute gastritis</td>\n",
       "      <td>535.00</td>\n",
       "      <td>K29.00</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>Acute gastritis</td>\n",
       "      <td>535.00</td>\n",
       "      <td>K29.00</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Trochanteric bursitis</td>\n",
       "      <td>726.5</td>\n",
       "      <td>M70.60</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Acute upper respiratory infections of unspecif...</td>\n",
       "      <td>465.9</td>\n",
       "      <td>J06.9</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Anxiety state, unspecified</td>\n",
       "      <td>300.00</td>\n",
       "      <td>F41.1</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Congestive heart failure, unspecified</td>\n",
       "      <td>428.0</td>\n",
       "      <td>I50.9</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Unspecified hypertensive heart disease with he...</td>\n",
       "      <td>402.91</td>\n",
       "      <td>I11.0, I50.9</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>EAR PAIN</td>\n",
       "      <td>Infective otitis externa, unspecified</td>\n",
       "      <td>380.10</td>\n",
       "      <td>H60.399</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>GLAND SWELLING</td>\n",
       "      <td>Infective otitis externa, unspecified</td>\n",
       "      <td>380.10</td>\n",
       "      <td>H60.399</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>URINARY TRACT INFECTION</td>\n",
       "      <td>Dysuria</td>\n",
       "      <td>788.1</td>\n",
       "      <td>R30.0</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>URINARY TRACT INFECTION</td>\n",
       "      <td>Infections of genitourinary tract antepartum</td>\n",
       "      <td>646.63</td>\n",
       "      <td>O23.90</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>URINARY TRACT INFECTION</td>\n",
       "      <td>Dysuria</td>\n",
       "      <td>788.1</td>\n",
       "      <td>R30.0</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>URINARY TRACT INFECTION</td>\n",
       "      <td>Hematuria</td>\n",
       "      <td>599.70</td>\n",
       "      <td>R31.9</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>RASH</td>\n",
       "      <td>Diaper candidiasis</td>\n",
       "      <td>112.3, 691.0</td>\n",
       "      <td>B37.2, L22</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>BLOOD SUGAR PROBLEM</td>\n",
       "      <td>Type II or unspecified type diabetes mellitus ...</td>\n",
       "      <td>250.00</td>\n",
       "      <td>E11.9</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>08/29/2011</td>\n",
       "      <td>MATTOON CHARLESTON CLINIC</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>Otitis media, acute</td>\n",
       "      <td>382.9</td>\n",
       "      <td>H66.90</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Date of Visit   Convenient Care Location                Chief Complaint  \\\n",
       "0     04/09/2010    CHAMPAIGN ON CURTIS PBB            *No Chief Complaint   \n",
       "1     09/17/2010        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "2     03/11/2011         DANVILLE FAIRCHILD  ERRONEOUS ENCOUNTER-DISREGARD   \n",
       "3     03/31/2011  MATTOON CHARLESTON CLINIC            *No Chief Complaint   \n",
       "4     06/20/2011          URBANA ON WINDSOR            *No Chief Complaint   \n",
       "5     08/27/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "6     08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "7     08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "8     08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "9     08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "10    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "11    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "12    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "13    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "14    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "15    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "16    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "17    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "18    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "19    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "20    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "21    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "22    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "23    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "24    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "25    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "26    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "27    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "28    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "29    08/28/2011        CHAMPAIGN ON CURTIS            *No Chief Complaint   \n",
       "..           ...                        ...                            ...   \n",
       "70    08/29/2011  MATTOON CHARLESTON CLINIC                      DIZZINESS   \n",
       "71    08/29/2011  MATTOON CHARLESTON CLINIC                    SORE THROAT   \n",
       "72    08/29/2011  MATTOON CHARLESTON CLINIC                         LESION   \n",
       "73    08/29/2011  MATTOON CHARLESTON CLINIC                      DIZZINESS   \n",
       "74    08/29/2011  MATTOON CHARLESTON CLINIC           UPPER RESPIRATORY SX   \n",
       "75    08/29/2011  MATTOON CHARLESTON CLINIC                          FEVER   \n",
       "76    08/29/2011  MATTOON CHARLESTON CLINIC           UPPER RESPIRATORY SX   \n",
       "77    08/29/2011  MATTOON CHARLESTON CLINIC                      BACK PAIN   \n",
       "78    08/29/2011  MATTOON CHARLESTON CLINIC                      BACK PAIN   \n",
       "79    08/29/2011  MATTOON CHARLESTON CLINIC                      BACK PAIN   \n",
       "80    08/29/2011  MATTOON CHARLESTON CLINIC                          COUGH   \n",
       "81    08/29/2011  MATTOON CHARLESTON CLINIC                    EAR PROBLEM   \n",
       "82    08/29/2011  MATTOON CHARLESTON CLINIC                          COUGH   \n",
       "83    08/29/2011  MATTOON CHARLESTON CLINIC                    EAR PROBLEM   \n",
       "84    08/29/2011  MATTOON CHARLESTON CLINIC                       VOMITING   \n",
       "85    08/29/2011  MATTOON CHARLESTON CLINIC                          FEVER   \n",
       "86    08/29/2011  MATTOON CHARLESTON CLINIC                       LEG PAIN   \n",
       "87    08/29/2011  MATTOON CHARLESTON CLINIC                       LEG PAIN   \n",
       "88    08/29/2011  MATTOON CHARLESTON CLINIC            *No Chief Complaint   \n",
       "89    08/29/2011  MATTOON CHARLESTON CLINIC            *No Chief Complaint   \n",
       "90    08/29/2011  MATTOON CHARLESTON CLINIC            *No Chief Complaint   \n",
       "91    08/29/2011  MATTOON CHARLESTON CLINIC                       EAR PAIN   \n",
       "92    08/29/2011  MATTOON CHARLESTON CLINIC                 GLAND SWELLING   \n",
       "93    08/29/2011  MATTOON CHARLESTON CLINIC        URINARY TRACT INFECTION   \n",
       "94    08/29/2011  MATTOON CHARLESTON CLINIC        URINARY TRACT INFECTION   \n",
       "95    08/29/2011  MATTOON CHARLESTON CLINIC        URINARY TRACT INFECTION   \n",
       "96    08/29/2011  MATTOON CHARLESTON CLINIC        URINARY TRACT INFECTION   \n",
       "97    08/29/2011  MATTOON CHARLESTON CLINIC                           RASH   \n",
       "98    08/29/2011  MATTOON CHARLESTON CLINIC            BLOOD SUGAR PROBLEM   \n",
       "99    08/29/2011  MATTOON CHARLESTON CLINIC                          COUGH   \n",
       "\n",
       "                                            Diagnosis          ICD9  \\\n",
       "0                                              *No Dx           NaN   \n",
       "1                                              *No Dx           NaN   \n",
       "2                      ERRONEOUS ENCOUNTER--DISREGARD         10000   \n",
       "3                                              *No Dx           NaN   \n",
       "4                             Corneal abrasion, right         918.1   \n",
       "5                                              *No Dx           NaN   \n",
       "6                                   Acute pharyngitis           462   \n",
       "7                                              *No Dx           NaN   \n",
       "8                                              *No Dx           NaN   \n",
       "9                                              *No Dx           NaN   \n",
       "10                                             *No Dx           NaN   \n",
       "11                                             *No Dx           NaN   \n",
       "12                                             *No Dx           NaN   \n",
       "13                                             *No Dx           NaN   \n",
       "14                                             *No Dx           NaN   \n",
       "15                                             *No Dx           NaN   \n",
       "16                                             *No Dx           NaN   \n",
       "17                                             *No Dx           NaN   \n",
       "18                                             *No Dx           NaN   \n",
       "19                                             *No Dx           NaN   \n",
       "20                                             *No Dx           NaN   \n",
       "21                                             *No Dx           NaN   \n",
       "22                                             *No Dx           NaN   \n",
       "23                                             *No Dx           NaN   \n",
       "24                                             *No Dx           NaN   \n",
       "25                                             *No Dx           NaN   \n",
       "26                                             *No Dx           NaN   \n",
       "27                                             *No Dx           NaN   \n",
       "28                                             *No Dx           NaN   \n",
       "29                                             *No Dx           NaN   \n",
       "..                                                ...           ...   \n",
       "70  Attention deficit disorder without mention of ...        314.00   \n",
       "71  Acute upper respiratory infections of unspecif...         465.9   \n",
       "72  Acute upper respiratory infections of unspecif...         465.9   \n",
       "73  Acute upper respiratory infections of unspecif...         465.9   \n",
       "74                       Acute sinusitis, unspecified         461.9   \n",
       "75                       Acute sinusitis, unspecified         461.9   \n",
       "76               Allergic rhinitis, cause unspecified         477.9   \n",
       "77                          Osteoporosis, unspecified        733.00   \n",
       "78                                            Lumbago         724.2   \n",
       "79  COPD (chronic obstructive pulmonary disease) (...           496   \n",
       "80                           Unspecified otitis media         382.9   \n",
       "81                           Unspecified otitis media         382.9   \n",
       "82  Acute upper respiratory infections of unspecif...         465.9   \n",
       "83  Acute upper respiratory infections of unspecif...         465.9   \n",
       "84                                    Acute gastritis        535.00   \n",
       "85                                    Acute gastritis        535.00   \n",
       "86                              Trochanteric bursitis         726.5   \n",
       "87  Acute upper respiratory infections of unspecif...         465.9   \n",
       "88                         Anxiety state, unspecified        300.00   \n",
       "89              Congestive heart failure, unspecified         428.0   \n",
       "90  Unspecified hypertensive heart disease with he...        402.91   \n",
       "91              Infective otitis externa, unspecified        380.10   \n",
       "92              Infective otitis externa, unspecified        380.10   \n",
       "93                                            Dysuria         788.1   \n",
       "94       Infections of genitourinary tract antepartum        646.63   \n",
       "95                                            Dysuria         788.1   \n",
       "96                                          Hematuria        599.70   \n",
       "97                                 Diaper candidiasis  112.3, 691.0   \n",
       "98  Type II or unspecified type diabetes mellitus ...        250.00   \n",
       "99                                Otitis media, acute         382.9   \n",
       "\n",
       "           ICD10  ID  \n",
       "0            NaN   1  \n",
       "1            NaN   2  \n",
       "2          10001   3  \n",
       "3            NaN   4  \n",
       "4       S05.01XA   5  \n",
       "5            NaN   6  \n",
       "6          J02.9   7  \n",
       "7            NaN   8  \n",
       "8            NaN   9  \n",
       "9            NaN  10  \n",
       "10           NaN  11  \n",
       "11           NaN  12  \n",
       "12           NaN  13  \n",
       "13           NaN  14  \n",
       "14           NaN  15  \n",
       "15           NaN  16  \n",
       "16           NaN  17  \n",
       "17           NaN  18  \n",
       "18           NaN  19  \n",
       "19           NaN  20  \n",
       "20           NaN  21  \n",
       "21           NaN  22  \n",
       "22           NaN  23  \n",
       "23           NaN  24  \n",
       "24           NaN  25  \n",
       "25           NaN  26  \n",
       "26           NaN  27  \n",
       "27           NaN  28  \n",
       "28           NaN  29  \n",
       "29           NaN  30  \n",
       "..           ...  ..  \n",
       "70         F98.8  56  \n",
       "71         J06.9  56  \n",
       "72         J06.9  56  \n",
       "73         J06.9  56  \n",
       "74        J01.90  57  \n",
       "75        J01.90  57  \n",
       "76         J30.9  58  \n",
       "77         M81.0  59  \n",
       "78         M54.5  59  \n",
       "79         J44.9  59  \n",
       "80        H66.90  60  \n",
       "81        H66.90  60  \n",
       "82         J06.9  60  \n",
       "83         J06.9  60  \n",
       "84        K29.00  61  \n",
       "85        K29.00  61  \n",
       "86        M70.60  62  \n",
       "87         J06.9  62  \n",
       "88         F41.1  63  \n",
       "89         I50.9  63  \n",
       "90  I11.0, I50.9  63  \n",
       "91       H60.399  64  \n",
       "92       H60.399  64  \n",
       "93         R30.0  65  \n",
       "94        O23.90  66  \n",
       "95         R30.0  66  \n",
       "96         R31.9  66  \n",
       "97    B37.2, L22  67  \n",
       "98         E11.9  68  \n",
       "99        H66.90  69  \n",
       "\n",
       "[100 rows x 7 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concare_df.head(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Convenient Care Location</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2505658</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>CHAMPAIGN ON CURTIS PBB</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Acute pain of left knee</td>\n",
       "      <td>719.46</td>\n",
       "      <td>M25.562</td>\n",
       "      <td>945,521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505659</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>CHAMPAIGN ON CURTIS PBB</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Pain of left thigh</td>\n",
       "      <td>729.5</td>\n",
       "      <td>M79.652</td>\n",
       "      <td>945,521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505660</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>MAIN CAMPUS PBB</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>Acute tonsillitis, unspecified etiology</td>\n",
       "      <td>463</td>\n",
       "      <td>J03.90</td>\n",
       "      <td>945,522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505661</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>MAIN CAMPUS PBB</td>\n",
       "      <td>FLANK PAIN</td>\n",
       "      <td>Acute tonsillitis, unspecified etiology</td>\n",
       "      <td>463</td>\n",
       "      <td>J03.90</td>\n",
       "      <td>945,522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505662</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>MAIN CAMPUS PBB</td>\n",
       "      <td>EYE PAIN</td>\n",
       "      <td>Acute bacterial conjunctivitis of left eye</td>\n",
       "      <td>372.03</td>\n",
       "      <td>H10.32</td>\n",
       "      <td>945,523</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date of Visit Convenient Care Location Chief Complaint  \\\n",
       "2505658    11/11/2019  CHAMPAIGN ON CURTIS PBB        LEG PAIN   \n",
       "2505659    11/11/2019  CHAMPAIGN ON CURTIS PBB        LEG PAIN   \n",
       "2505660    11/11/2019          MAIN CAMPUS PBB           OTHER   \n",
       "2505661    11/11/2019          MAIN CAMPUS PBB      FLANK PAIN   \n",
       "2505662    11/11/2019          MAIN CAMPUS PBB        EYE PAIN   \n",
       "\n",
       "                                          Diagnosis    ICD9    ICD10       ID  \n",
       "2505658                     Acute pain of left knee  719.46  M25.562  945,521  \n",
       "2505659                          Pain of left thigh   729.5  M79.652  945,521  \n",
       "2505660     Acute tonsillitis, unspecified etiology     463   J03.90  945,522  \n",
       "2505661     Acute tonsillitis, unspecified etiology     463   J03.90  945,522  \n",
       "2505662  Acute bacterial conjunctivitis of left eye  372.03   H10.32  945,523  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concare_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ED DX</th>\n",
       "      <th>ID</th>\n",
       "      <th>Mile Radius</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SEIZURE</td>\n",
       "      <td>Seizures (CMS-HCC)</td>\n",
       "      <td>780.39</td>\n",
       "      <td>R56.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SEIZURE</td>\n",
       "      <td>Self mutilation</td>\n",
       "      <td>300.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SEIZURE</td>\n",
       "      <td>Epileptic seizures (CMS-HCC)</td>\n",
       "      <td>345.90</td>\n",
       "      <td>G40.909</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SEIZURE</td>\n",
       "      <td>Vaccine for diphtheria-tetanus</td>\n",
       "      <td>V06.5</td>\n",
       "      <td>Z23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>Fluid overload</td>\n",
       "      <td>276.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>Pleural effusion</td>\n",
       "      <td>511.9</td>\n",
       "      <td>J90</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>Thrombocytopenia (CMS-HCC)</td>\n",
       "      <td>287.5</td>\n",
       "      <td>D69.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>Elevated LFT's</td>\n",
       "      <td>794.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>Ascites</td>\n",
       "      <td>789.59</td>\n",
       "      <td>R18.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ALCOHOL INTOXICATION</td>\n",
       "      <td>Alcohol intoxication (CMS-HCC)</td>\n",
       "      <td>305.00</td>\n",
       "      <td>F10.929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>EYE PAIN</td>\n",
       "      <td>Corneal burn</td>\n",
       "      <td>940.4</td>\n",
       "      <td>T26.10XA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ALTERED MENTAL STATUS</td>\n",
       "      <td>Alcohol intoxication (CMS-HCC)</td>\n",
       "      <td>305.00</td>\n",
       "      <td>F10.929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Acute abdominal pain</td>\n",
       "      <td>789.00, 338.19</td>\n",
       "      <td>R10.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Atypical chest pain</td>\n",
       "      <td>786.59</td>\n",
       "      <td>R07.89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Dementia (CMS-HCC)</td>\n",
       "      <td>294.20</td>\n",
       "      <td>F03.90</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>LEG PAIN</td>\n",
       "      <td>Elevated troponin</td>\n",
       "      <td>790.6</td>\n",
       "      <td>R79.89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ANKLE TRAUMA</td>\n",
       "      <td>Ankle pain</td>\n",
       "      <td>719.47</td>\n",
       "      <td>M25.579</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ANKLE TRAUMA</td>\n",
       "      <td>Head injury</td>\n",
       "      <td>959.01</td>\n",
       "      <td>S09.90XA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ANKLE TRAUMA</td>\n",
       "      <td>Fibula fracture</td>\n",
       "      <td>823.81</td>\n",
       "      <td>S82.409A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>01/01/2010</td>\n",
       "      <td>ANKLE TRAUMA</td>\n",
       "      <td>Alcohol use</td>\n",
       "      <td>V49.89</td>\n",
       "      <td>Z72.89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>20 Miles</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Date of Visit        Chief Complaint                       Diagnosis  \\\n",
       "0     01/01/2010                SEIZURE              Seizures (CMS-HCC)   \n",
       "1     01/01/2010                SEIZURE                 Self mutilation   \n",
       "2     01/01/2010                SEIZURE    Epileptic seizures (CMS-HCC)   \n",
       "3     01/01/2010                SEIZURE  Vaccine for diphtheria-tetanus   \n",
       "4     01/01/2010    SHORTNESS OF BREATH                  Fluid overload   \n",
       "5     01/01/2010    SHORTNESS OF BREATH                Pleural effusion   \n",
       "6     01/01/2010    SHORTNESS OF BREATH      Thrombocytopenia (CMS-HCC)   \n",
       "7     01/01/2010    SHORTNESS OF BREATH                  Elevated LFT's   \n",
       "8     01/01/2010    SHORTNESS OF BREATH                         Ascites   \n",
       "9     01/01/2010   ALCOHOL INTOXICATION  Alcohol intoxication (CMS-HCC)   \n",
       "10    01/01/2010               EYE PAIN                    Corneal burn   \n",
       "11    01/01/2010  ALTERED MENTAL STATUS  Alcohol intoxication (CMS-HCC)   \n",
       "12    01/01/2010               LEG PAIN            Acute abdominal pain   \n",
       "13    01/01/2010               LEG PAIN             Atypical chest pain   \n",
       "14    01/01/2010               LEG PAIN              Dementia (CMS-HCC)   \n",
       "15    01/01/2010               LEG PAIN               Elevated troponin   \n",
       "16    01/01/2010           ANKLE TRAUMA                      Ankle pain   \n",
       "17    01/01/2010           ANKLE TRAUMA                     Head injury   \n",
       "18    01/01/2010           ANKLE TRAUMA                 Fibula fracture   \n",
       "19    01/01/2010           ANKLE TRAUMA                     Alcohol use   \n",
       "\n",
       "              ICD9     ICD10 ED DX ID Mile Radius  \n",
       "0           780.39     R56.9   NaN  1    10 Miles  \n",
       "1            300.9       NaN   NaN  1    10 Miles  \n",
       "2           345.90   G40.909   NaN  1    10 Miles  \n",
       "3            V06.5       Z23   NaN  1    10 Miles  \n",
       "4            276.6       NaN   NaN  2    20 Miles  \n",
       "5            511.9       J90   NaN  2    20 Miles  \n",
       "6            287.5     D69.6   NaN  2    20 Miles  \n",
       "7            794.8       NaN   NaN  2    20 Miles  \n",
       "8           789.59     R18.8   NaN  2    20 Miles  \n",
       "9           305.00   F10.929   NaN  3    10 Miles  \n",
       "10           940.4  T26.10XA   NaN  4    20 Miles  \n",
       "11          305.00   F10.929   NaN  5    10 Miles  \n",
       "12  789.00, 338.19     R10.9   NaN  6    10 Miles  \n",
       "13          786.59    R07.89   NaN  6    10 Miles  \n",
       "14          294.20    F03.90   NaN  6    10 Miles  \n",
       "15           790.6    R79.89   NaN  6    10 Miles  \n",
       "16          719.47   M25.579   NaN  7    20 Miles  \n",
       "17          959.01  S09.90XA   NaN  7    20 Miles  \n",
       "18          823.81  S82.409A   NaN  7    20 Miles  \n",
       "19          V49.89    Z72.89   NaN  7    20 Miles  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emergency_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ED DX</th>\n",
       "      <th>ID</th>\n",
       "      <th>Mile Radius</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2359933</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>Anxiety</td>\n",
       "      <td>300.00</td>\n",
       "      <td>F41.9</td>\n",
       "      <td>Y</td>\n",
       "      <td>875,038</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2359934</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>Chest wall pain</td>\n",
       "      <td>786.52</td>\n",
       "      <td>R07.89</td>\n",
       "      <td>Y</td>\n",
       "      <td>875,038</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2359935</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>Stress response</td>\n",
       "      <td>308.9</td>\n",
       "      <td>F43.0</td>\n",
       "      <td>Y</td>\n",
       "      <td>875,038</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2359936</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>ALLERGIC REACTION</td>\n",
       "      <td>Allergic reaction to food, initial encounter</td>\n",
       "      <td>V15.05</td>\n",
       "      <td>T78.1XXA</td>\n",
       "      <td>Y</td>\n",
       "      <td>875,039</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2359937</th>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>MOTOR VEHICLE CRASH</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>875,040</td>\n",
       "      <td>Other</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date of Visit      Chief Complaint  \\\n",
       "2359933    11/11/2019           CHEST PAIN   \n",
       "2359934    11/11/2019           CHEST PAIN   \n",
       "2359935    11/11/2019           CHEST PAIN   \n",
       "2359936    11/11/2019    ALLERGIC REACTION   \n",
       "2359937    11/11/2019  MOTOR VEHICLE CRASH   \n",
       "\n",
       "                                            Diagnosis    ICD9     ICD10 ED DX  \\\n",
       "2359933                                       Anxiety  300.00     F41.9     Y   \n",
       "2359934                               Chest wall pain  786.52    R07.89     Y   \n",
       "2359935                               Stress response   308.9     F43.0     Y   \n",
       "2359936  Allergic reaction to food, initial encounter  V15.05  T78.1XXA     Y   \n",
       "2359937                                        *No Dx     NaN       NaN   NaN   \n",
       "\n",
       "              ID Mile Radius  \n",
       "2359933  875,038    10 Miles  \n",
       "2359934  875,038    10 Miles  \n",
       "2359935  875,038    10 Miles  \n",
       "2359936  875,039    10 Miles  \n",
       "2359937  875,040       Other  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emergency_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ED DX</th>\n",
       "      <th>ID</th>\n",
       "      <th>Mile Radius</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2359938</td>\n",
       "      <td>2359938</td>\n",
       "      <td>2359936</td>\n",
       "      <td>2325127</td>\n",
       "      <td>2320098</td>\n",
       "      <td>2047731</td>\n",
       "      <td>2359938</td>\n",
       "      <td>2359651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>3602</td>\n",
       "      <td>565</td>\n",
       "      <td>147893</td>\n",
       "      <td>10697</td>\n",
       "      <td>19209</td>\n",
       "      <td>2</td>\n",
       "      <td>875040</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>01/02/2015</td>\n",
       "      <td>ROMI</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>786.50</td>\n",
       "      <td>R07.9</td>\n",
       "      <td>Y</td>\n",
       "      <td>295,460</td>\n",
       "      <td>10 Miles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1488</td>\n",
       "      <td>215921</td>\n",
       "      <td>34459</td>\n",
       "      <td>44385</td>\n",
       "      <td>42519</td>\n",
       "      <td>1322589</td>\n",
       "      <td>152</td>\n",
       "      <td>1010333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date of Visit Chief Complaint Diagnosis     ICD9    ICD10    ED DX  \\\n",
       "count        2359938         2359938   2359936  2325127  2320098  2047731   \n",
       "unique          3602             565    147893    10697    19209        2   \n",
       "top       01/02/2015            ROMI    *No Dx   786.50    R07.9        Y   \n",
       "freq            1488          215921     34459    44385    42519  1322589   \n",
       "\n",
       "             ID Mile Radius  \n",
       "count   2359938     2359651  \n",
       "unique   875040           6  \n",
       "top     295,460    10 Miles  \n",
       "freq        152     1010333  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emergency_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2359938 entries, 0 to 2359937\n",
      "Data columns (total 8 columns):\n",
      "Date of Visit      object\n",
      "Chief Complaint    object\n",
      "Diagnosis          object\n",
      "ICD9               object\n",
      "ICD10              object\n",
      "ED DX              object\n",
      "ID                 object\n",
      "Mile Radius        object\n",
      "dtypes: object(8)\n",
      "memory usage: 144.0+ MB\n"
     ]
    }
   ],
   "source": [
    "emergency_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Caller</th>\n",
       "      <th>Date of Call</th>\n",
       "      <th>Guideline Used</th>\n",
       "      <th>Version</th>\n",
       "      <th>Reason For Call</th>\n",
       "      <th>Date of Onset</th>\n",
       "      <th>Comment</th>\n",
       "      <th>Reason For Call.1</th>\n",
       "      <th>Date of Onset.1</th>\n",
       "      <th>Comment.1</th>\n",
       "      <th>...</th>\n",
       "      <th>Comment.4</th>\n",
       "      <th>Reason For Call.5</th>\n",
       "      <th>Date of Onset.5</th>\n",
       "      <th>Comment.5</th>\n",
       "      <th>Reason For Call.6</th>\n",
       "      <th>Date of Onset.6</th>\n",
       "      <th>Comment.6</th>\n",
       "      <th>Reason For Call.7</th>\n",
       "      <th>Date of Onset.7</th>\n",
       "      <th>Comment.7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Carle</td>\n",
       "      <td>11/05/2013</td>\n",
       "      <td>Nosebleed-A-AH</td>\n",
       "      <td>10/30/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Carle</td>\n",
       "      <td>11/27/2013</td>\n",
       "      <td>Poisoning-A-AH</td>\n",
       "      <td>10/30/2013</td>\n",
       "      <td>INGESTION, ACCIDENTAL</td>\n",
       "      <td>11/27/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Trauma - Foot and Ankle-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>FOOT TRAUMA</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Diarrhea-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>VOMITING</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DIARRHEA</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>11/30/2013</td>\n",
       "      <td>occurs with coughing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Abdominal Pain - Female-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>MEDICATION INFORMATION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NAUSEA</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Rectal Bleeding-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>RECTAL BLEEDING</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/02/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Sarah Bush</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever - 3 Months or Older-P-AH</td>\n",
       "      <td>10/11/2013</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>102 under the arm</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever-A-AH</td>\n",
       "      <td>3/3/2012</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>102.6 fever</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever - 3 Months or Older-P-AH</td>\n",
       "      <td>10/11/2013</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>coughing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Christie Clinic</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Breathing Difficulty-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>having trouble breathing</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>coughing a lot</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Skin Lesion - Moles or Growths-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>SKIN PROBLEM</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>exposure to scabies</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Leg Pain-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>INFECTION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>on his leg</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever-A-AH</td>\n",
       "      <td>3/3/2012</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>had surg 11/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Community</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Alcohol Use and Abuse and Dependence-A-AH</td>\n",
       "      <td>2/4/2012</td>\n",
       "      <td>ALCOHOL INTOXICATION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Pregnancy - Abdominal Pain GT 20 Weeks EGA-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>MEDICATION PROBLEM</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>thinks she got the wrong medication</td>\n",
       "      <td>FLANK PAIN</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>IV Site (Skin) Symptoms-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>IV INSERTION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>the area above where the IV was is painful</td>\n",
       "      <td>POST-OP COMPLICATIONS</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Caller Date of Call  \\\n",
       "0             Carle   11/05/2013   \n",
       "1             Carle   11/27/2013   \n",
       "2             Carle   12/03/2013   \n",
       "3             Carle   12/03/2013   \n",
       "4             Carle   12/03/2013   \n",
       "5             Carle   12/03/2013   \n",
       "6             Carle   12/03/2013   \n",
       "7             Carle   12/03/2013   \n",
       "8             Carle   12/03/2013   \n",
       "9             Carle   12/03/2013   \n",
       "10       Sarah Bush   12/03/2013   \n",
       "11            Carle   12/03/2013   \n",
       "12            Carle   12/03/2013   \n",
       "13  Christie Clinic   12/03/2013   \n",
       "14            Carle   12/03/2013   \n",
       "15            Carle   12/03/2013   \n",
       "16            Carle   12/03/2013   \n",
       "17        Community   12/03/2013   \n",
       "18            Carle   12/03/2013   \n",
       "19            Carle   12/03/2013   \n",
       "\n",
       "                                     Guideline Used     Version  \\\n",
       "0                                    Nosebleed-A-AH  10/30/2013   \n",
       "1                                    Poisoning-A-AH  10/30/2013   \n",
       "2                      Trauma - Foot and Ankle-A-AH  12/23/2011   \n",
       "3                                     Diarrhea-A-AH   2/25/2012   \n",
       "4                                   Chest Pain-A-AH   8/22/2012   \n",
       "5                      Abdominal Pain - Female-A-AH   2/25/2012   \n",
       "6                                   Chest Pain-A-AH   8/22/2012   \n",
       "7                              Rectal Bleeding-A-AH   2/25/2012   \n",
       "8                                   Chest Pain-A-AH   8/22/2012   \n",
       "9                                   Chest Pain-A-AH   8/22/2012   \n",
       "10                   Fever - 3 Months or Older-P-AH  10/11/2013   \n",
       "11                                       Fever-A-AH    3/3/2012   \n",
       "12                   Fever - 3 Months or Older-P-AH  10/11/2013   \n",
       "13                        Breathing Difficulty-A-AH   2/25/2012   \n",
       "14              Skin Lesion - Moles or Growths-A-AH  12/23/2011   \n",
       "15                                    Leg Pain-A-AH   2/25/2012   \n",
       "16                                       Fever-A-AH    3/3/2012   \n",
       "17        Alcohol Use and Abuse and Dependence-A-AH    2/4/2012   \n",
       "18  Pregnancy - Abdominal Pain GT 20 Weeks EGA-A-AH   2/25/2012   \n",
       "19                     IV Site (Skin) Symptoms-A-AH  12/23/2011   \n",
       "\n",
       "           Reason For Call Date of Onset  \\\n",
       "0                      NaN           NaN   \n",
       "1    INGESTION, ACCIDENTAL    11/27/2013   \n",
       "2              FOOT TRAUMA    12/03/2013   \n",
       "3                 VOMITING    12/03/2013   \n",
       "4               CHEST PAIN    11/30/2013   \n",
       "5   MEDICATION INFORMATION    12/03/2013   \n",
       "6               CHEST PAIN    12/03/2013   \n",
       "7          RECTAL BLEEDING    12/03/2013   \n",
       "8               CHEST PAIN    12/03/2013   \n",
       "9               CHEST PAIN    12/02/2013   \n",
       "10                   FEVER    12/03/2013   \n",
       "11                   FEVER    12/03/2013   \n",
       "12                   FEVER    12/03/2013   \n",
       "13     SHORTNESS OF BREATH    12/03/2013   \n",
       "14            SKIN PROBLEM    12/03/2013   \n",
       "15               INFECTION    12/03/2013   \n",
       "16                   FEVER    12/03/2013   \n",
       "17    ALCOHOL INTOXICATION    12/03/2013   \n",
       "18      MEDICATION PROBLEM    12/03/2013   \n",
       "19            IV INSERTION    12/03/2013   \n",
       "\n",
       "                                       Comment      Reason For Call.1  \\\n",
       "0                                          NaN                    NaN   \n",
       "1                                          NaN                    NaN   \n",
       "2                                          NaN                    NaN   \n",
       "3                                          NaN               DIARRHEA   \n",
       "4                         occurs with coughing                    NaN   \n",
       "5                                          NaN                 NAUSEA   \n",
       "6                                          NaN                    NaN   \n",
       "7                                          NaN                    NaN   \n",
       "8                                          NaN                    NaN   \n",
       "9                                          NaN                    NaN   \n",
       "10                           102 under the arm                    NaN   \n",
       "11                                 102.6 fever                    NaN   \n",
       "12                                    coughing                    NaN   \n",
       "13                    having trouble breathing                  COUGH   \n",
       "14                         exposure to scabies                    NaN   \n",
       "15                                  on his leg                    NaN   \n",
       "16                              had surg 11/19                    NaN   \n",
       "17                                         NaN                    NaN   \n",
       "18         thinks she got the wrong medication             FLANK PAIN   \n",
       "19  the area above where the IV was is painful  POST-OP COMPLICATIONS   \n",
       "\n",
       "   Date of Onset.1       Comment.1    ...    Comment.4 Reason For Call.5  \\\n",
       "0              NaN             NaN    ...          NaN               NaN   \n",
       "1              NaN             NaN    ...          NaN               NaN   \n",
       "2              NaN             NaN    ...          NaN               NaN   \n",
       "3        12/3/2013             NaN    ...          NaN               NaN   \n",
       "4              NaN             NaN    ...          NaN               NaN   \n",
       "5        12/3/2013             NaN    ...          NaN               NaN   \n",
       "6              NaN             NaN    ...          NaN               NaN   \n",
       "7              NaN             NaN    ...          NaN               NaN   \n",
       "8              NaN             NaN    ...          NaN               NaN   \n",
       "9              NaN             NaN    ...          NaN               NaN   \n",
       "10             NaN             NaN    ...          NaN               NaN   \n",
       "11             NaN             NaN    ...          NaN               NaN   \n",
       "12             NaN             NaN    ...          NaN               NaN   \n",
       "13       12/3/2013  coughing a lot    ...          NaN               NaN   \n",
       "14             NaN             NaN    ...          NaN               NaN   \n",
       "15             NaN             NaN    ...          NaN               NaN   \n",
       "16             NaN             NaN    ...          NaN               NaN   \n",
       "17             NaN             NaN    ...          NaN               NaN   \n",
       "18       12/3/2013             NaN    ...          NaN               NaN   \n",
       "19       12/3/2013             NaN    ...          NaN               NaN   \n",
       "\n",
       "   Date of Onset.5 Comment.5 Reason For Call.6 Date of Onset.6 Comment.6  \\\n",
       "0              NaN       NaN               NaN             NaN       NaN   \n",
       "1              NaN       NaN               NaN             NaN       NaN   \n",
       "2              NaN       NaN               NaN             NaN       NaN   \n",
       "3              NaN       NaN               NaN             NaN       NaN   \n",
       "4              NaN       NaN               NaN             NaN       NaN   \n",
       "5              NaN       NaN               NaN             NaN       NaN   \n",
       "6              NaN       NaN               NaN             NaN       NaN   \n",
       "7              NaN       NaN               NaN             NaN       NaN   \n",
       "8              NaN       NaN               NaN             NaN       NaN   \n",
       "9              NaN       NaN               NaN             NaN       NaN   \n",
       "10             NaN       NaN               NaN             NaN       NaN   \n",
       "11             NaN       NaN               NaN             NaN       NaN   \n",
       "12             NaN       NaN               NaN             NaN       NaN   \n",
       "13             NaN       NaN               NaN             NaN       NaN   \n",
       "14             NaN       NaN               NaN             NaN       NaN   \n",
       "15             NaN       NaN               NaN             NaN       NaN   \n",
       "16             NaN       NaN               NaN             NaN       NaN   \n",
       "17             NaN       NaN               NaN             NaN       NaN   \n",
       "18             NaN       NaN               NaN             NaN       NaN   \n",
       "19             NaN       NaN               NaN             NaN       NaN   \n",
       "\n",
       "   Reason For Call.7 Date of Onset.7 Comment.7  \n",
       "0                NaN             NaN       NaN  \n",
       "1                NaN             NaN       NaN  \n",
       "2                NaN             NaN       NaN  \n",
       "3                NaN             NaN       NaN  \n",
       "4                NaN             NaN       NaN  \n",
       "5                NaN             NaN       NaN  \n",
       "6                NaN             NaN       NaN  \n",
       "7                NaN             NaN       NaN  \n",
       "8                NaN             NaN       NaN  \n",
       "9                NaN             NaN       NaN  \n",
       "10               NaN             NaN       NaN  \n",
       "11               NaN             NaN       NaN  \n",
       "12               NaN             NaN       NaN  \n",
       "13               NaN             NaN       NaN  \n",
       "14               NaN             NaN       NaN  \n",
       "15               NaN             NaN       NaN  \n",
       "16               NaN             NaN       NaN  \n",
       "17               NaN             NaN       NaN  \n",
       "18               NaN             NaN       NaN  \n",
       "19               NaN             NaN       NaN  \n",
       "\n",
       "[20 rows x 28 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Caller</th>\n",
       "      <th>Date of Call</th>\n",
       "      <th>Guideline Used</th>\n",
       "      <th>Version</th>\n",
       "      <th>Reason For Call</th>\n",
       "      <th>Date of Onset</th>\n",
       "      <th>Comment</th>\n",
       "      <th>Reason For Call.1</th>\n",
       "      <th>Date of Onset.1</th>\n",
       "      <th>Comment.1</th>\n",
       "      <th>...</th>\n",
       "      <th>Comment.4</th>\n",
       "      <th>Reason For Call.5</th>\n",
       "      <th>Date of Onset.5</th>\n",
       "      <th>Comment.5</th>\n",
       "      <th>Reason For Call.6</th>\n",
       "      <th>Date of Onset.6</th>\n",
       "      <th>Comment.6</th>\n",
       "      <th>Reason For Call.7</th>\n",
       "      <th>Date of Onset.7</th>\n",
       "      <th>Comment.7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>232573</th>\n",
       "      <td>Carle Main</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>Vomiting Without Diarrhea-P-AH</td>\n",
       "      <td>7/11/2018</td>\n",
       "      <td>VOMITING</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232574</th>\n",
       "      <td>Carle Main</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>Eye - Pus Or Discharge-P-AH</td>\n",
       "      <td>7/16/2018</td>\n",
       "      <td>CONJUNCTIVITIS</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232575</th>\n",
       "      <td>Carle</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>Cast Symptoms and Questions-A-AH</td>\n",
       "      <td>5/26/2018</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232576</th>\n",
       "      <td>Carle Main</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>Medication Question Call-A-AH</td>\n",
       "      <td>5/12/2018</td>\n",
       "      <td>MEDICATION INFORMATION</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232577</th>\n",
       "      <td>Carle Main</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>Headache-A-AH</td>\n",
       "      <td>5/12/2018</td>\n",
       "      <td>HEADACHE</td>\n",
       "      <td>11/11/2019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Caller Date of Call                    Guideline Used    Version  \\\n",
       "232573  Carle Main   11/11/2019    Vomiting Without Diarrhea-P-AH  7/11/2018   \n",
       "232574  Carle Main   11/11/2019       Eye - Pus Or Discharge-P-AH  7/16/2018   \n",
       "232575       Carle   11/11/2019  Cast Symptoms and Questions-A-AH  5/26/2018   \n",
       "232576  Carle Main   11/11/2019     Medication Question Call-A-AH  5/12/2018   \n",
       "232577  Carle Main   11/11/2019                     Headache-A-AH  5/12/2018   \n",
       "\n",
       "               Reason For Call Date of Onset Comment Reason For Call.1  \\\n",
       "232573                VOMITING    11/11/2019     NaN               NaN   \n",
       "232574          CONJUNCTIVITIS    11/11/2019     NaN               NaN   \n",
       "232575                     NaN           NaN     NaN               NaN   \n",
       "232576  MEDICATION INFORMATION    11/11/2019     NaN               NaN   \n",
       "232577                HEADACHE    11/11/2019     NaN               NaN   \n",
       "\n",
       "       Date of Onset.1 Comment.1    ...    Comment.4 Reason For Call.5  \\\n",
       "232573             NaN       NaN    ...          NaN               NaN   \n",
       "232574             NaN       NaN    ...          NaN               NaN   \n",
       "232575             NaN       NaN    ...          NaN               NaN   \n",
       "232576             NaN       NaN    ...          NaN               NaN   \n",
       "232577             NaN       NaN    ...          NaN               NaN   \n",
       "\n",
       "       Date of Onset.5 Comment.5 Reason For Call.6 Date of Onset.6 Comment.6  \\\n",
       "232573             NaN       NaN               NaN             NaN       NaN   \n",
       "232574             NaN       NaN               NaN             NaN       NaN   \n",
       "232575             NaN       NaN               NaN             NaN       NaN   \n",
       "232576             NaN       NaN               NaN             NaN       NaN   \n",
       "232577             NaN       NaN               NaN             NaN       NaN   \n",
       "\n",
       "       Reason For Call.7 Date of Onset.7 Comment.7  \n",
       "232573               NaN             NaN       NaN  \n",
       "232574               NaN             NaN       NaN  \n",
       "232575               NaN             NaN       NaN  \n",
       "232576               NaN             NaN       NaN  \n",
       "232577               NaN             NaN       NaN  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Caller</th>\n",
       "      <th>Date of Call</th>\n",
       "      <th>Guideline Used</th>\n",
       "      <th>Version</th>\n",
       "      <th>Reason For Call</th>\n",
       "      <th>Date of Onset</th>\n",
       "      <th>Comment</th>\n",
       "      <th>Reason For Call.1</th>\n",
       "      <th>Date of Onset.1</th>\n",
       "      <th>Comment.1</th>\n",
       "      <th>...</th>\n",
       "      <th>Comment.4</th>\n",
       "      <th>Reason For Call.5</th>\n",
       "      <th>Date of Onset.5</th>\n",
       "      <th>Comment.5</th>\n",
       "      <th>Reason For Call.6</th>\n",
       "      <th>Date of Onset.6</th>\n",
       "      <th>Comment.6</th>\n",
       "      <th>Reason For Call.7</th>\n",
       "      <th>Date of Onset.7</th>\n",
       "      <th>Comment.7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>232578</td>\n",
       "      <td>232578</td>\n",
       "      <td>232578</td>\n",
       "      <td>231261</td>\n",
       "      <td>231657</td>\n",
       "      <td>231517</td>\n",
       "      <td>104392</td>\n",
       "      <td>75337</td>\n",
       "      <td>75290</td>\n",
       "      <td>11719</td>\n",
       "      <td>...</td>\n",
       "      <td>251</td>\n",
       "      <td>392</td>\n",
       "      <td>392</td>\n",
       "      <td>54</td>\n",
       "      <td>105</td>\n",
       "      <td>104</td>\n",
       "      <td>17</td>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>20</td>\n",
       "      <td>2172</td>\n",
       "      <td>1143</td>\n",
       "      <td>415</td>\n",
       "      <td>553</td>\n",
       "      <td>2179</td>\n",
       "      <td>96259</td>\n",
       "      <td>505</td>\n",
       "      <td>2168</td>\n",
       "      <td>9793</td>\n",
       "      <td>...</td>\n",
       "      <td>241</td>\n",
       "      <td>119</td>\n",
       "      <td>328</td>\n",
       "      <td>53</td>\n",
       "      <td>55</td>\n",
       "      <td>99</td>\n",
       "      <td>17</td>\n",
       "      <td>26</td>\n",
       "      <td>32</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Carle</td>\n",
       "      <td>03/25/2019</td>\n",
       "      <td>Post-Op Symptoms and Questions-A-AH</td>\n",
       "      <td>5/12/2018</td>\n",
       "      <td>ABDOMINAL PAIN</td>\n",
       "      <td>03/25/2019</td>\n",
       "      <td>left</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>3/18/2019</td>\n",
       "      <td>left</td>\n",
       "      <td>...</td>\n",
       "      <td>right</td>\n",
       "      <td>HEADACHE</td>\n",
       "      <td>8/1/2017</td>\n",
       "      <td>left</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>1/2/2018</td>\n",
       "      <td>Daily - bile</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>2/26/2018</td>\n",
       "      <td>with coughing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>160125</td>\n",
       "      <td>205</td>\n",
       "      <td>6777</td>\n",
       "      <td>15851</td>\n",
       "      <td>13944</td>\n",
       "      <td>205</td>\n",
       "      <td>127</td>\n",
       "      <td>4848</td>\n",
       "      <td>106</td>\n",
       "      <td>55</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>27</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Caller Date of Call                       Guideline Used    Version  \\\n",
       "count   232578       232578                               232578     231261   \n",
       "unique      20         2172                                 1143        415   \n",
       "top      Carle   03/25/2019  Post-Op Symptoms and Questions-A-AH  5/12/2018   \n",
       "freq    160125          205                                 6777      15851   \n",
       "\n",
       "       Reason For Call Date of Onset Comment Reason For Call.1  \\\n",
       "count           231657        231517  104392             75337   \n",
       "unique             553          2179   96259               505   \n",
       "top     ABDOMINAL PAIN    03/25/2019    left             COUGH   \n",
       "freq             13944           205     127              4848   \n",
       "\n",
       "       Date of Onset.1 Comment.1      ...       Comment.4 Reason For Call.5  \\\n",
       "count            75290     11719      ...             251               392   \n",
       "unique            2168      9793      ...             241               119   \n",
       "top          3/18/2019      left      ...           right          HEADACHE   \n",
       "freq               106        55      ...               3                27   \n",
       "\n",
       "       Date of Onset.5 Comment.5 Reason For Call.6 Date of Onset.6  \\\n",
       "count              392        54               105             104   \n",
       "unique             328        53                55              99   \n",
       "top           8/1/2017      left             COUGH        1/2/2018   \n",
       "freq                 3         2                 8               2   \n",
       "\n",
       "           Comment.6 Reason For Call.7 Date of Onset.7      Comment.7  \n",
       "count             17                33              33              5  \n",
       "unique            17                26              32              5  \n",
       "top     Daily - bile             OTHER       2/26/2018  with coughing  \n",
       "freq               1                 3               2              1  \n",
       "\n",
       "[4 rows x 28 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 232578 entries, 0 to 232577\n",
      "Data columns (total 28 columns):\n",
      "Caller               232578 non-null object\n",
      "Date of Call         232578 non-null object\n",
      "Guideline Used       232578 non-null object\n",
      "Version              231261 non-null object\n",
      "Reason For Call      231657 non-null object\n",
      "Date of Onset        231517 non-null object\n",
      "Comment              104392 non-null object\n",
      "Reason For Call.1    75337 non-null object\n",
      "Date of Onset.1      75290 non-null object\n",
      "Comment.1            11719 non-null object\n",
      "Reason For Call.2    23990 non-null object\n",
      "Date of Onset.2      23979 non-null object\n",
      "Comment.2            3515 non-null object\n",
      "Reason For Call.3    6394 non-null object\n",
      "Date of Onset.3      6392 non-null object\n",
      "Comment.3            962 non-null object\n",
      "Reason For Call.4    1633 non-null object\n",
      "Date of Onset.4      1633 non-null object\n",
      "Comment.4            251 non-null object\n",
      "Reason For Call.5    392 non-null object\n",
      "Date of Onset.5      392 non-null object\n",
      "Comment.5            54 non-null object\n",
      "Reason For Call.6    105 non-null object\n",
      "Date of Onset.6      104 non-null object\n",
      "Comment.6            17 non-null object\n",
      "Reason For Call.7    33 non-null object\n",
      "Date of Onset.7      33 non-null object\n",
      "Comment.7            5 non-null object\n",
      "dtypes: object(28)\n",
      "memory usage: 49.7+ MB\n"
     ]
    }
   ],
   "source": [
    "pandata_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Concatenate the two datasets, only considering overlapping columns\n",
    "hosp_visit_df = pd.concat([concare_df[['Date of Visit', 'Chief Complaint', 'Diagnosis', 'ICD9', 'ICD10', 'ID']]\n",
    "                       , emergency_df[['Date of Visit', 'Chief Complaint', 'Diagnosis', 'ICD9', 'ICD10', 'ID']]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2505663, 7)\n",
      "(2359938, 8)\n",
      "(4865601, 6)\n"
     ]
    }
   ],
   "source": [
    "# See the number of rows for each dataset\n",
    "print(concare_df.shape)\n",
    "print(emergency_df.shape)\n",
    "print(hosp_visit_df.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Chief Complaint</th>\n",
       "      <th>Diagnosis</th>\n",
       "      <th>ICD9</th>\n",
       "      <th>ICD10</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04/09/2010</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>09/17/2010</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>03/11/2011</td>\n",
       "      <td>ERRONEOUS ENCOUNTER-DISREGARD</td>\n",
       "      <td>ERRONEOUS ENCOUNTER--DISREGARD</td>\n",
       "      <td>10000</td>\n",
       "      <td>10001</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03/31/2011</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>*No Dx</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>06/20/2011</td>\n",
       "      <td>*No Chief Complaint</td>\n",
       "      <td>Corneal abrasion, right</td>\n",
       "      <td>918.1</td>\n",
       "      <td>S05.01XA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Date of Visit                Chief Complaint  \\\n",
       "0    04/09/2010            *No Chief Complaint   \n",
       "1    09/17/2010            *No Chief Complaint   \n",
       "2    03/11/2011  ERRONEOUS ENCOUNTER-DISREGARD   \n",
       "3    03/31/2011            *No Chief Complaint   \n",
       "4    06/20/2011            *No Chief Complaint   \n",
       "\n",
       "                        Diagnosis   ICD9     ICD10 ID  \n",
       "0                          *No Dx    NaN       NaN  1  \n",
       "1                          *No Dx    NaN       NaN  2  \n",
       "2  ERRONEOUS ENCOUNTER--DISREGARD  10000     10001  3  \n",
       "3                          *No Dx    NaN       NaN  4  \n",
       "4         Corneal abrasion, right  918.1  S05.01XA  5  "
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hosp_visit_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Count of Visit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>02/06/2017</td>\n",
       "      <td>2892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12/29/2014</td>\n",
       "      <td>2804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12/16/2014</td>\n",
       "      <td>2708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12/26/2014</td>\n",
       "      <td>2668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>03/09/2015</td>\n",
       "      <td>2635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>03/07/2016</td>\n",
       "      <td>2626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12/15/2014</td>\n",
       "      <td>2624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>11/04/2019</td>\n",
       "      <td>2617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>01/02/2015</td>\n",
       "      <td>2617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12/23/2014</td>\n",
       "      <td>2608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12/22/2014</td>\n",
       "      <td>2601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>03/16/2015</td>\n",
       "      <td>2586</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>01/30/2017</td>\n",
       "      <td>2579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>12/01/2014</td>\n",
       "      <td>2568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12/30/2014</td>\n",
       "      <td>2566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>02/13/2017</td>\n",
       "      <td>2561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>11/29/2016</td>\n",
       "      <td>2539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>02/27/2017</td>\n",
       "      <td>2532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>01/22/2018</td>\n",
       "      <td>2530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>02/05/2018</td>\n",
       "      <td>2524</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Date of Visit  Count of Visit\n",
       "0     02/06/2017            2892\n",
       "1     12/29/2014            2804\n",
       "2     12/16/2014            2708\n",
       "3     12/26/2014            2668\n",
       "4     03/09/2015            2635\n",
       "5     03/07/2016            2626\n",
       "6     12/15/2014            2624\n",
       "7     11/04/2019            2617\n",
       "8     01/02/2015            2617\n",
       "9     12/23/2014            2608\n",
       "10    12/22/2014            2601\n",
       "11    03/16/2015            2586\n",
       "12    01/30/2017            2579\n",
       "13    12/01/2014            2568\n",
       "14    12/30/2014            2566\n",
       "15    02/13/2017            2561\n",
       "16    11/29/2016            2539\n",
       "17    02/27/2017            2532\n",
       "18    01/22/2018            2530\n",
       "19    02/05/2018            2524"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hosp_visit_count_df = hosp_visit_df['Date of Visit'].value_counts().reset_index()\n",
    "hosp_visit_count_df.columns = ['Date of Visit', 'Count of Visit']\n",
    "hosp_visit_count_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the day of the week using datetime module\n",
    "hosp_visit_count_df['Weekday'] = hosp_visit_count_df['Date of Visit'].apply(lambda x: datetime.strptime(x, '%m/%d/%Y').weekday())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "hosp_visit_count_df.set_index('Date of Visit', inplace = True)\n",
    "hosp_visit_count_df.index = pd.to_datetime(hosp_visit_count_df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Count of Visit</th>\n",
       "      <th>Weekday</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date of Visit</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-02-06</th>\n",
       "      <td>2892</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-29</th>\n",
       "      <td>2804</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-16</th>\n",
       "      <td>2708</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-26</th>\n",
       "      <td>2668</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-03-09</th>\n",
       "      <td>2635</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-03-07</th>\n",
       "      <td>2626</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-15</th>\n",
       "      <td>2624</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-01-02</th>\n",
       "      <td>2617</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-04</th>\n",
       "      <td>2617</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-23</th>\n",
       "      <td>2608</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-22</th>\n",
       "      <td>2601</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-03-16</th>\n",
       "      <td>2586</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-30</th>\n",
       "      <td>2579</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-01</th>\n",
       "      <td>2568</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014-12-30</th>\n",
       "      <td>2566</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-02-13</th>\n",
       "      <td>2561</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-11-29</th>\n",
       "      <td>2539</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-02-27</th>\n",
       "      <td>2532</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-01-22</th>\n",
       "      <td>2530</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-02-05</th>\n",
       "      <td>2524</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Count of Visit  Weekday\n",
       "Date of Visit                         \n",
       "2017-02-06               2892        0\n",
       "2014-12-29               2804        0\n",
       "2014-12-16               2708        1\n",
       "2014-12-26               2668        4\n",
       "2015-03-09               2635        0\n",
       "2016-03-07               2626        0\n",
       "2014-12-15               2624        0\n",
       "2015-01-02               2617        4\n",
       "2019-11-04               2617        0\n",
       "2014-12-23               2608        1\n",
       "2014-12-22               2601        0\n",
       "2015-03-16               2586        0\n",
       "2017-01-30               2579        0\n",
       "2014-12-01               2568        0\n",
       "2014-12-30               2566        1\n",
       "2017-02-13               2561        0\n",
       "2016-11-29               2539        1\n",
       "2017-02-27               2532        0\n",
       "2018-01-22               2530        0\n",
       "2018-02-05               2524        0"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hosp_visit_count_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b002ac6160>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Time series plot of number of visits to CC and ED\n",
    "hosp_visit_count_df['Count of Visit'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Caller</th>\n",
       "      <th>Date of Call</th>\n",
       "      <th>Guideline Used</th>\n",
       "      <th>Version</th>\n",
       "      <th>Reason For Call</th>\n",
       "      <th>Date of Onset</th>\n",
       "      <th>Comment</th>\n",
       "      <th>Reason For Call.1</th>\n",
       "      <th>Date of Onset.1</th>\n",
       "      <th>Comment.1</th>\n",
       "      <th>...</th>\n",
       "      <th>Comment.4</th>\n",
       "      <th>Reason For Call.5</th>\n",
       "      <th>Date of Onset.5</th>\n",
       "      <th>Comment.5</th>\n",
       "      <th>Reason For Call.6</th>\n",
       "      <th>Date of Onset.6</th>\n",
       "      <th>Comment.6</th>\n",
       "      <th>Reason For Call.7</th>\n",
       "      <th>Date of Onset.7</th>\n",
       "      <th>Comment.7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Carle</td>\n",
       "      <td>11/05/2013</td>\n",
       "      <td>Nosebleed-A-AH</td>\n",
       "      <td>10/30/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Carle</td>\n",
       "      <td>11/27/2013</td>\n",
       "      <td>Poisoning-A-AH</td>\n",
       "      <td>10/30/2013</td>\n",
       "      <td>INGESTION, ACCIDENTAL</td>\n",
       "      <td>11/27/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Trauma - Foot and Ankle-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>FOOT TRAUMA</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Diarrhea-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>VOMITING</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DIARRHEA</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>11/30/2013</td>\n",
       "      <td>occurs with coughing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Abdominal Pain - Female-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>MEDICATION INFORMATION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NAUSEA</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Rectal Bleeding-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>RECTAL BLEEDING</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Chest Pain-A-AH</td>\n",
       "      <td>8/22/2012</td>\n",
       "      <td>CHEST PAIN</td>\n",
       "      <td>12/02/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Sarah Bush</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever - 3 Months or Older-P-AH</td>\n",
       "      <td>10/11/2013</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>102 under the arm</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever-A-AH</td>\n",
       "      <td>3/3/2012</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>102.6 fever</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever - 3 Months or Older-P-AH</td>\n",
       "      <td>10/11/2013</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>coughing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Christie Clinic</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Breathing Difficulty-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>SHORTNESS OF BREATH</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>having trouble breathing</td>\n",
       "      <td>COUGH</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>coughing a lot</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Skin Lesion - Moles or Growths-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>SKIN PROBLEM</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>exposure to scabies</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Leg Pain-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>INFECTION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>on his leg</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Fever-A-AH</td>\n",
       "      <td>3/3/2012</td>\n",
       "      <td>FEVER</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>had surg 11/19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Community</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Alcohol Use and Abuse and Dependence-A-AH</td>\n",
       "      <td>2/4/2012</td>\n",
       "      <td>ALCOHOL INTOXICATION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>Pregnancy - Abdominal Pain GT 20 Weeks EGA-A-AH</td>\n",
       "      <td>2/25/2012</td>\n",
       "      <td>MEDICATION PROBLEM</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>thinks she got the wrong medication</td>\n",
       "      <td>FLANK PAIN</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Carle</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>IV Site (Skin) Symptoms-A-AH</td>\n",
       "      <td>12/23/2011</td>\n",
       "      <td>IV INSERTION</td>\n",
       "      <td>12/03/2013</td>\n",
       "      <td>the area above where the IV was is painful</td>\n",
       "      <td>POST-OP COMPLICATIONS</td>\n",
       "      <td>12/3/2013</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>20 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Caller Date of Call  \\\n",
       "0             Carle   11/05/2013   \n",
       "1             Carle   11/27/2013   \n",
       "2             Carle   12/03/2013   \n",
       "3             Carle   12/03/2013   \n",
       "4             Carle   12/03/2013   \n",
       "5             Carle   12/03/2013   \n",
       "6             Carle   12/03/2013   \n",
       "7             Carle   12/03/2013   \n",
       "8             Carle   12/03/2013   \n",
       "9             Carle   12/03/2013   \n",
       "10       Sarah Bush   12/03/2013   \n",
       "11            Carle   12/03/2013   \n",
       "12            Carle   12/03/2013   \n",
       "13  Christie Clinic   12/03/2013   \n",
       "14            Carle   12/03/2013   \n",
       "15            Carle   12/03/2013   \n",
       "16            Carle   12/03/2013   \n",
       "17        Community   12/03/2013   \n",
       "18            Carle   12/03/2013   \n",
       "19            Carle   12/03/2013   \n",
       "\n",
       "                                     Guideline Used     Version  \\\n",
       "0                                    Nosebleed-A-AH  10/30/2013   \n",
       "1                                    Poisoning-A-AH  10/30/2013   \n",
       "2                      Trauma - Foot and Ankle-A-AH  12/23/2011   \n",
       "3                                     Diarrhea-A-AH   2/25/2012   \n",
       "4                                   Chest Pain-A-AH   8/22/2012   \n",
       "5                      Abdominal Pain - Female-A-AH   2/25/2012   \n",
       "6                                   Chest Pain-A-AH   8/22/2012   \n",
       "7                              Rectal Bleeding-A-AH   2/25/2012   \n",
       "8                                   Chest Pain-A-AH   8/22/2012   \n",
       "9                                   Chest Pain-A-AH   8/22/2012   \n",
       "10                   Fever - 3 Months or Older-P-AH  10/11/2013   \n",
       "11                                       Fever-A-AH    3/3/2012   \n",
       "12                   Fever - 3 Months or Older-P-AH  10/11/2013   \n",
       "13                        Breathing Difficulty-A-AH   2/25/2012   \n",
       "14              Skin Lesion - Moles or Growths-A-AH  12/23/2011   \n",
       "15                                    Leg Pain-A-AH   2/25/2012   \n",
       "16                                       Fever-A-AH    3/3/2012   \n",
       "17        Alcohol Use and Abuse and Dependence-A-AH    2/4/2012   \n",
       "18  Pregnancy - Abdominal Pain GT 20 Weeks EGA-A-AH   2/25/2012   \n",
       "19                     IV Site (Skin) Symptoms-A-AH  12/23/2011   \n",
       "\n",
       "           Reason For Call Date of Onset  \\\n",
       "0                      NaN           NaN   \n",
       "1    INGESTION, ACCIDENTAL    11/27/2013   \n",
       "2              FOOT TRAUMA    12/03/2013   \n",
       "3                 VOMITING    12/03/2013   \n",
       "4               CHEST PAIN    11/30/2013   \n",
       "5   MEDICATION INFORMATION    12/03/2013   \n",
       "6               CHEST PAIN    12/03/2013   \n",
       "7          RECTAL BLEEDING    12/03/2013   \n",
       "8               CHEST PAIN    12/03/2013   \n",
       "9               CHEST PAIN    12/02/2013   \n",
       "10                   FEVER    12/03/2013   \n",
       "11                   FEVER    12/03/2013   \n",
       "12                   FEVER    12/03/2013   \n",
       "13     SHORTNESS OF BREATH    12/03/2013   \n",
       "14            SKIN PROBLEM    12/03/2013   \n",
       "15               INFECTION    12/03/2013   \n",
       "16                   FEVER    12/03/2013   \n",
       "17    ALCOHOL INTOXICATION    12/03/2013   \n",
       "18      MEDICATION PROBLEM    12/03/2013   \n",
       "19            IV INSERTION    12/03/2013   \n",
       "\n",
       "                                       Comment      Reason For Call.1  \\\n",
       "0                                          NaN                    NaN   \n",
       "1                                          NaN                    NaN   \n",
       "2                                          NaN                    NaN   \n",
       "3                                          NaN               DIARRHEA   \n",
       "4                         occurs with coughing                    NaN   \n",
       "5                                          NaN                 NAUSEA   \n",
       "6                                          NaN                    NaN   \n",
       "7                                          NaN                    NaN   \n",
       "8                                          NaN                    NaN   \n",
       "9                                          NaN                    NaN   \n",
       "10                           102 under the arm                    NaN   \n",
       "11                                 102.6 fever                    NaN   \n",
       "12                                    coughing                    NaN   \n",
       "13                    having trouble breathing                  COUGH   \n",
       "14                         exposure to scabies                    NaN   \n",
       "15                                  on his leg                    NaN   \n",
       "16                              had surg 11/19                    NaN   \n",
       "17                                         NaN                    NaN   \n",
       "18         thinks she got the wrong medication             FLANK PAIN   \n",
       "19  the area above where the IV was is painful  POST-OP COMPLICATIONS   \n",
       "\n",
       "   Date of Onset.1       Comment.1    ...    Comment.4 Reason For Call.5  \\\n",
       "0              NaN             NaN    ...          NaN               NaN   \n",
       "1              NaN             NaN    ...          NaN               NaN   \n",
       "2              NaN             NaN    ...          NaN               NaN   \n",
       "3        12/3/2013             NaN    ...          NaN               NaN   \n",
       "4              NaN             NaN    ...          NaN               NaN   \n",
       "5        12/3/2013             NaN    ...          NaN               NaN   \n",
       "6              NaN             NaN    ...          NaN               NaN   \n",
       "7              NaN             NaN    ...          NaN               NaN   \n",
       "8              NaN             NaN    ...          NaN               NaN   \n",
       "9              NaN             NaN    ...          NaN               NaN   \n",
       "10             NaN             NaN    ...          NaN               NaN   \n",
       "11             NaN             NaN    ...          NaN               NaN   \n",
       "12             NaN             NaN    ...          NaN               NaN   \n",
       "13       12/3/2013  coughing a lot    ...          NaN               NaN   \n",
       "14             NaN             NaN    ...          NaN               NaN   \n",
       "15             NaN             NaN    ...          NaN               NaN   \n",
       "16             NaN             NaN    ...          NaN               NaN   \n",
       "17             NaN             NaN    ...          NaN               NaN   \n",
       "18       12/3/2013             NaN    ...          NaN               NaN   \n",
       "19       12/3/2013             NaN    ...          NaN               NaN   \n",
       "\n",
       "   Date of Onset.5 Comment.5 Reason For Call.6 Date of Onset.6 Comment.6  \\\n",
       "0              NaN       NaN               NaN             NaN       NaN   \n",
       "1              NaN       NaN               NaN             NaN       NaN   \n",
       "2              NaN       NaN               NaN             NaN       NaN   \n",
       "3              NaN       NaN               NaN             NaN       NaN   \n",
       "4              NaN       NaN               NaN             NaN       NaN   \n",
       "5              NaN       NaN               NaN             NaN       NaN   \n",
       "6              NaN       NaN               NaN             NaN       NaN   \n",
       "7              NaN       NaN               NaN             NaN       NaN   \n",
       "8              NaN       NaN               NaN             NaN       NaN   \n",
       "9              NaN       NaN               NaN             NaN       NaN   \n",
       "10             NaN       NaN               NaN             NaN       NaN   \n",
       "11             NaN       NaN               NaN             NaN       NaN   \n",
       "12             NaN       NaN               NaN             NaN       NaN   \n",
       "13             NaN       NaN               NaN             NaN       NaN   \n",
       "14             NaN       NaN               NaN             NaN       NaN   \n",
       "15             NaN       NaN               NaN             NaN       NaN   \n",
       "16             NaN       NaN               NaN             NaN       NaN   \n",
       "17             NaN       NaN               NaN             NaN       NaN   \n",
       "18             NaN       NaN               NaN             NaN       NaN   \n",
       "19             NaN       NaN               NaN             NaN       NaN   \n",
       "\n",
       "   Reason For Call.7 Date of Onset.7 Comment.7  \n",
       "0                NaN             NaN       NaN  \n",
       "1                NaN             NaN       NaN  \n",
       "2                NaN             NaN       NaN  \n",
       "3                NaN             NaN       NaN  \n",
       "4                NaN             NaN       NaN  \n",
       "5                NaN             NaN       NaN  \n",
       "6                NaN             NaN       NaN  \n",
       "7                NaN             NaN       NaN  \n",
       "8                NaN             NaN       NaN  \n",
       "9                NaN             NaN       NaN  \n",
       "10               NaN             NaN       NaN  \n",
       "11               NaN             NaN       NaN  \n",
       "12               NaN             NaN       NaN  \n",
       "13               NaN             NaN       NaN  \n",
       "14               NaN             NaN       NaN  \n",
       "15               NaN             NaN       NaN  \n",
       "16               NaN             NaN       NaN  \n",
       "17               NaN             NaN       NaN  \n",
       "18               NaN             NaN       NaN  \n",
       "19               NaN             NaN       NaN  \n",
       "\n",
       "[20 rows x 28 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Call</th>\n",
       "      <th>Count of Calls</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>03/25/2019</td>\n",
       "      <td>205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>02/12/2018</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>03/18/2019</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03/04/2019</td>\n",
       "      <td>197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>03/11/2019</td>\n",
       "      <td>196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>09/30/2019</td>\n",
       "      <td>196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10/21/2019</td>\n",
       "      <td>195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>02/11/2019</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>02/25/2019</td>\n",
       "      <td>193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10/01/2018</td>\n",
       "      <td>192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>02/19/2018</td>\n",
       "      <td>191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>01/29/2018</td>\n",
       "      <td>189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>09/24/2018</td>\n",
       "      <td>186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>11/04/2019</td>\n",
       "      <td>185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12/17/2018</td>\n",
       "      <td>184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>02/22/2018</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>05/06/2019</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>06/24/2019</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>04/01/2019</td>\n",
       "      <td>182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>01/22/2018</td>\n",
       "      <td>182</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Date of Call  Count of Calls\n",
       "0    03/25/2019             205\n",
       "1    02/12/2018             200\n",
       "2    03/18/2019             200\n",
       "3    03/04/2019             197\n",
       "4    03/11/2019             196\n",
       "5    09/30/2019             196\n",
       "6    10/21/2019             195\n",
       "7    02/11/2019             194\n",
       "8    02/25/2019             193\n",
       "9    10/01/2018             192\n",
       "10   02/19/2018             191\n",
       "11   01/29/2018             189\n",
       "12   09/24/2018             186\n",
       "13   11/04/2019             185\n",
       "14   12/17/2018             184\n",
       "15   02/22/2018             183\n",
       "16   05/06/2019             183\n",
       "17   06/24/2019             183\n",
       "18   04/01/2019             182\n",
       "19   01/22/2018             182"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_count_df = pandata_df['Date of Call'].value_counts().reset_index()\n",
    "pandata_count_df.columns = ['Date of Call', 'Count of Calls']\n",
    "pandata_count_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "pandata_count_df.set_index('Date of Call', inplace = True)\n",
    "pandata_count_df.index = pd.to_datetime(pandata_count_df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b003ef5240>"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Time series plot of number of calls\n",
    "pandata_count_df.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Augmented Dickey Fuller Test\n",
    "\n",
    "ADF Test is to determine if the timeseries is stationary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date of Visit</th>\n",
       "      <th>Count of Visit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>01/02/2015</td>\n",
       "      <td>1488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12/16/2014</td>\n",
       "      <td>1405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>09/29/2014</td>\n",
       "      <td>1338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10/20/2014</td>\n",
       "      <td>1334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12/30/2014</td>\n",
       "      <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05/19/2014</td>\n",
       "      <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12/22/2014</td>\n",
       "      <td>1286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10/13/2014</td>\n",
       "      <td>1281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>12/27/2014</td>\n",
       "      <td>1251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>07/29/2014</td>\n",
       "      <td>1228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12/01/2014</td>\n",
       "      <td>1226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>04/09/2015</td>\n",
       "      <td>1220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12/29/2014</td>\n",
       "      <td>1215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>04/27/2015</td>\n",
       "      <td>1214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12/23/2014</td>\n",
       "      <td>1212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>06/15/2015</td>\n",
       "      <td>1211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>04/06/2015</td>\n",
       "      <td>1209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>04/22/2019</td>\n",
       "      <td>1205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>03/09/2015</td>\n",
       "      <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>06/23/2014</td>\n",
       "      <td>1199</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Date of Visit  Count of Visit\n",
       "0     01/02/2015            1488\n",
       "1     12/16/2014            1405\n",
       "2     09/29/2014            1338\n",
       "3     10/20/2014            1334\n",
       "4     12/30/2014            1295\n",
       "5     05/19/2014            1295\n",
       "6     12/22/2014            1286\n",
       "7     10/13/2014            1281\n",
       "8     12/27/2014            1251\n",
       "9     07/29/2014            1228\n",
       "10    12/01/2014            1226\n",
       "11    04/09/2015            1220\n",
       "12    12/29/2014            1215\n",
       "13    04/27/2015            1214\n",
       "14    12/23/2014            1212\n",
       "15    06/15/2015            1211\n",
       "16    04/06/2015            1209\n",
       "17    04/22/2019            1205\n",
       "18    03/09/2015            1200\n",
       "19    06/23/2014            1199"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "em_visit_count_df = emergency_df['Date of Visit'].value_counts().reset_index()\n",
    "em_visit_count_df.columns = ['Date of Visit', 'Count of Visit']\n",
    "em_visit_count_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "em_visit_count_df.set_index('Date of Visit', inplace = True)\n",
    "em_visit_count_df.index = pd.to_datetime(em_visit_count_df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'hosp_visit_count_df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-100-a41b3135d2c4>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mtimeseries\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mhosp_visit_count_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"Count of Visit\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'hosp_visit_count_df' is not defined"
     ]
    }
   ],
   "source": [
    "timeseries = hosp_visit_count_df[\"Count of Visit\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "timeseries_1 = em_visit_count_df[\"Count of Visit\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "timeseries = timeseries.sort_values(ascending = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "timeseries_1 = timeseries_1.sort_values(ascending = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'timeseries' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-116-bb25dcc8a849>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mtimeseries\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'timeseries' is not defined"
     ]
    }
   ],
   "source": [
    "timeseries.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date of Visit\n",
       "2010-12-18    196\n",
       "2010-12-25    203\n",
       "2011-01-14    211\n",
       "2010-11-25    215\n",
       "2010-05-20    217\n",
       "2010-03-27    218\n",
       "2011-02-01    220\n",
       "2011-01-11    221\n",
       "2010-12-23    223\n",
       "2010-11-19    224\n",
       "Name: Count of Visit, dtype: int64"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "timeseries_1.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value: 0.9988350563146929\n"
     ]
    }
   ],
   "source": [
    "print(\"p-value:\", adfuller(timeseries.dropna())[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value: 0.43034885777931775\n"
     ]
    }
   ],
   "source": [
    "print(\"p-value:\", adfuller(timeseries_1.dropna())[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ADF Statistic: 2.146005005691443\n",
      "p-value: 0.9988350563146929\n",
      "Critical Values:\n",
      "\t1%: -3.432182541829493\n",
      "\t5%: -2.8623497140302914\n",
      "\t10%: -2.5672010239749072\n"
     ]
    }
   ],
   "source": [
    "result = adfuller(timeseries)\n",
    "print('ADF Statistic: {}'.format(result[0]))\n",
    "print('p-value: {}'.format(result[1]))\n",
    "print('Critical Values:')\n",
    "for key, value in result[4].items():\n",
    "    print('\\t{}: {}'.format(key, value))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ADF Statistic: -1.7014824083815157\n",
      "p-value: 0.43034885777931775\n",
      "Critical Values:\n",
      "\t1%: -3.432182541829493\n",
      "\t5%: -2.8623497140302914\n",
      "\t10%: -2.5672010239749072\n"
     ]
    }
   ],
   "source": [
    "result_1 = adfuller(timeseries_1)\n",
    "print('ADF Statistic: {}'.format(result_1[0]))\n",
    "print('p-value: {}'.format(result_1[1]))\n",
    "print('Critical Values:')\n",
    "for key, value in result_1[4].items():\n",
    "    print('\\t{}: {}'.format(key, value))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since the p-value is greater than the significance level 0.05, therefore, the variable is not stationary and differencing is needed.\n",
    "\n",
    "Next we figure out the order of differencing,d, using auto correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
    "fig = plt.figure(figsize=(10, 10))\n",
    "ax1 = fig.add_subplot(311)\n",
    "fig = plot_acf(timeseries, ax=ax1,\n",
    "               title=\"Autocorrelation on Original Series\", lags = 100) \n",
    "ax2 = fig.add_subplot(312)\n",
    "fig = plot_acf(timeseries.diff().dropna(), ax=ax2, \n",
    "               title=\"1st Order Differencing\", lags = 100)\n",
    "ax3 = fig.add_subplot(313)\n",
    "fig = plot_acf(timeseries.diff().diff().dropna(), ax=ax3, \n",
    "               title=\"2nd Order Differencing\", lags = 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finding out the order of AR and p by counting the number of lags above the level of significance in partial autocorrrelation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_pacf(timeseries.diff().dropna(), lags=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_acf(timeseries.diff().dropna(), lags = 50)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fitting the timeseries data on ARIMA model with p,q and d values being taken as 2\n",
    "Where, p = number of autoregressive terms (AR order)\n",
    "       d = number of nonseasonal differences (differencing order)\n",
    "       q = number of moving-average terms (MA order) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Shray\\Anaconda3\\lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:225: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
      "  ' ignored when e.g. forecasting.', ValueWarning)\n",
      "C:\\Users\\Shray\\Anaconda3\\lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:225: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
      "  ' ignored when e.g. forecasting.', ValueWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = ARIMA(timeseries, order=(2, 2, 2))\n",
    "results = model.fit()\n",
    "results.plot_predict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Shray\\Anaconda3\\lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:225: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
      "  ' ignored when e.g. forecasting.', ValueWarning)\n",
      "C:\\Users\\Shray\\Anaconda3\\lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:225: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
      "  ' ignored when e.g. forecasting.', ValueWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model_1 = ARIMA(timeseries_1, order=(2, 2, 2))\n",
    "results_1 = model_1.fit()\n",
    "results_1.plot_predict()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Steps for next week:\n",
    "1. Taking into account only emergency data and using convenience care as predictor\n",
    "2. Improving existing model with different algorithms\n",
    "3. Taking into account variables like weather and seasonal calendar data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "EDA on Convenient Care Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'float' object has no attribute 'split'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-98-d144b663682e>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0micd10_count\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconcare_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'ICD10'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m','\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pandas\\core\\series.py\u001b[0m in \u001b[0;36mapply\u001b[1;34m(self, func, convert_dtype, args, **kwds)\u001b[0m\n\u001b[0;32m   3192\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3193\u001b[0m                 \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobject\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3194\u001b[1;33m                 \u001b[0mmapped\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mlib\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmap_infer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mconvert\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mconvert_dtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3195\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3196\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mpandas/_libs/src\\inference.pyx\u001b[0m in \u001b[0;36mpandas._libs.lib.map_infer\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32m<ipython-input-98-d144b663682e>\u001b[0m in \u001b[0;36m<lambda>\u001b[1;34m(x)\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0micd10_count\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconcare_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'ICD10'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m','\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m: 'float' object has no attribute 'split'"
     ]
    }
   ],
   "source": [
    "icd10_count = concare_df['ICD10'].apply(lambda x: pd.Series(x.split(',')))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "icd10_cc = concare_df[['ICD10', 'ID']].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10001</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>S05.01XA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>J02.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505633</th>\n",
       "      <td>H61.23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505634</th>\n",
       "      <td>R50.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505635</th>\n",
       "      <td>R50.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505636</th>\n",
       "      <td>R50.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505637</th>\n",
       "      <td>J18.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505638</th>\n",
       "      <td>J18.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505639</th>\n",
       "      <td>J18.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505640</th>\n",
       "      <td>J06.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505641</th>\n",
       "      <td>J06.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505642</th>\n",
       "      <td>H66.92</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505643</th>\n",
       "      <td>H66.92</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505644</th>\n",
       "      <td>J20.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505645</th>\n",
       "      <td>J20.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505646</th>\n",
       "      <td>L03.115</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505647</th>\n",
       "      <td>I16.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505648</th>\n",
       "      <td>M25.532</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505649</th>\n",
       "      <td>M25.532</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505650</th>\n",
       "      <td>S59.222A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505651</th>\n",
       "      <td>S59.222A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505652</th>\n",
       "      <td>N90.89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505653</th>\n",
       "      <td>S30.814D</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505654</th>\n",
       "      <td>S61.411A</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505655</th>\n",
       "      <td>R06.02</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505656</th>\n",
       "      <td>H10.33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505657</th>\n",
       "      <td>J06.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505658</th>\n",
       "      <td>M25.562</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505659</th>\n",
       "      <td>M79.652</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505660</th>\n",
       "      <td>J03.90</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505661</th>\n",
       "      <td>J03.90</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2505662</th>\n",
       "      <td>H10.32</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2505663 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                0    1    2    3    4\n",
       "0             nan  NaN  NaN  NaN  NaN\n",
       "1             nan  NaN  NaN  NaN  NaN\n",
       "2           10001  NaN  NaN  NaN  NaN\n",
       "3             nan  NaN  NaN  NaN  NaN\n",
       "4        S05.01XA  NaN  NaN  NaN  NaN\n",
       "5             nan  NaN  NaN  NaN  NaN\n",
       "6           J02.9  NaN  NaN  NaN  NaN\n",
       "7             nan  NaN  NaN  NaN  NaN\n",
       "8             nan  NaN  NaN  NaN  NaN\n",
       "9             nan  NaN  NaN  NaN  NaN\n",
       "10            nan  NaN  NaN  NaN  NaN\n",
       "11            nan  NaN  NaN  NaN  NaN\n",
       "12            nan  NaN  NaN  NaN  NaN\n",
       "13            nan  NaN  NaN  NaN  NaN\n",
       "14            nan  NaN  NaN  NaN  NaN\n",
       "15            nan  NaN  NaN  NaN  NaN\n",
       "16            nan  NaN  NaN  NaN  NaN\n",
       "17            nan  NaN  NaN  NaN  NaN\n",
       "18            nan  NaN  NaN  NaN  NaN\n",
       "19            nan  NaN  NaN  NaN  NaN\n",
       "20            nan  NaN  NaN  NaN  NaN\n",
       "21            nan  NaN  NaN  NaN  NaN\n",
       "22            nan  NaN  NaN  NaN  NaN\n",
       "23            nan  NaN  NaN  NaN  NaN\n",
       "24            nan  NaN  NaN  NaN  NaN\n",
       "25            nan  NaN  NaN  NaN  NaN\n",
       "26            nan  NaN  NaN  NaN  NaN\n",
       "27            nan  NaN  NaN  NaN  NaN\n",
       "28            nan  NaN  NaN  NaN  NaN\n",
       "29            nan  NaN  NaN  NaN  NaN\n",
       "...           ...  ...  ...  ...  ...\n",
       "2505633    H61.23  NaN  NaN  NaN  NaN\n",
       "2505634     R50.9  NaN  NaN  NaN  NaN\n",
       "2505635     R50.9  NaN  NaN  NaN  NaN\n",
       "2505636     R50.9  NaN  NaN  NaN  NaN\n",
       "2505637     J18.1  NaN  NaN  NaN  NaN\n",
       "2505638     J18.1  NaN  NaN  NaN  NaN\n",
       "2505639     J18.1  NaN  NaN  NaN  NaN\n",
       "2505640     J06.9  NaN  NaN  NaN  NaN\n",
       "2505641     J06.9  NaN  NaN  NaN  NaN\n",
       "2505642    H66.92  NaN  NaN  NaN  NaN\n",
       "2505643    H66.92  NaN  NaN  NaN  NaN\n",
       "2505644     J20.9  NaN  NaN  NaN  NaN\n",
       "2505645     J20.9  NaN  NaN  NaN  NaN\n",
       "2505646   L03.115  NaN  NaN  NaN  NaN\n",
       "2505647     I16.0  NaN  NaN  NaN  NaN\n",
       "2505648   M25.532  NaN  NaN  NaN  NaN\n",
       "2505649   M25.532  NaN  NaN  NaN  NaN\n",
       "2505650  S59.222A  NaN  NaN  NaN  NaN\n",
       "2505651  S59.222A  NaN  NaN  NaN  NaN\n",
       "2505652    N90.89  NaN  NaN  NaN  NaN\n",
       "2505653  S30.814D  NaN  NaN  NaN  NaN\n",
       "2505654  S61.411A  NaN  NaN  NaN  NaN\n",
       "2505655    R06.02  NaN  NaN  NaN  NaN\n",
       "2505656    H10.33  NaN  NaN  NaN  NaN\n",
       "2505657     J06.9  NaN  NaN  NaN  NaN\n",
       "2505658   M25.562  NaN  NaN  NaN  NaN\n",
       "2505659   M79.652  NaN  NaN  NaN  NaN\n",
       "2505660    J03.90  NaN  NaN  NaN  NaN\n",
       "2505661    J03.90  NaN  NaN  NaN  NaN\n",
       "2505662    H10.32  NaN  NaN  NaN  NaN\n",
       "\n",
       "[2505663 rows x 5 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "icd10_cc.ICD10.apply(lambda x: pd.Series(str(x).split(\",\")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "icd10_cc_count = concare_df['ICD10'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "split_data = concare_df[\"ICD10\"].str.split(\",\")\n",
    "data = split_data.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "names = [\"Reason 1\"]\n",
    "new_df = pd.DataFrame(data, columns=names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Reason 1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[10001]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[S05.01XA]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Reason 1\n",
       "0         NaN\n",
       "1         NaN\n",
       "2     [10001]\n",
       "3         NaN\n",
       "4  [S05.01XA]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Location Count\n",
    "\n",
    "plot_1 = concare_df['Convenient Care Location'].value_counts().plot.bar(animated = True)\n",
    "plot_1.set_label('Convenient Care Location Count')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CHAMPAIGN ON CURTIS PBB                    719157\n",
       "URBANA ON WINDSOR PBB                      497435\n",
       "CARLE DANVILLE ON FAIRCHILD                424237\n",
       "CHAMPAIGN ON CURTIS                        245820\n",
       "CARLE MATTOON ON HURST                     180445\n",
       "URBANA ON WINDSOR                          146226\n",
       "CHARLOTTE ANN RUSSELL MEDICAL CENTER       110497\n",
       "DANVILLE FAIRCHILD                          85536\n",
       "MATTOON CHARLESTON CLINIC                   45190\n",
       "MAIN CAMPUS PBB                             25218\n",
       "MATTOON CHARLESTON                          13291\n",
       "CHRISTIE CLINIC ON WINDSOR RD CHAMPAIGN      4615\n",
       "CHRISTIE CLINIC URBANA                       2877\n",
       "CHRISTIE CLINIC ON VERMILION DANVILLE        1943\n",
       "CHRISTIE CLINIC MAHOMET                      1596\n",
       "INACTIVE DEPARTMENTS                         1572\n",
       "NORTH ANNEX                                     8\n",
       "Name: Convenient Care Location, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "concare_df['Convenient Care Location'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# PAN Caller Location\n",
    "\n",
    "plot_2 = pandata_df['Caller'].value_counts().plot.bar(animated = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2043cb41438>"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# PAN Guideline used\n",
    "\n",
    "pandata_df['Guideline Used'].value_counts().nlargest(10).plot.barh(color = 'C1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1143"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandata_df['Guideline Used'].nunique()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
